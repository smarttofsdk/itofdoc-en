<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="dmcam_8h" kind="file">
    <compoundname>dmcam.h</compoundname>
    <includes local="no">stdint.h</includes>
    <incdepgraph>
      <node id="4">
        <label>stdint.h</label>
      </node>
      <node id="3">
        <label>dmcam.h</label>
        <link refid="dmcam.h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structdmcam__dev__if__info__usb" prot="public">itof_dev_if_info_usb</innerclass>
    <innerclass refid="structdmcam__dev__if__info__eth" prot="public">itof_dev_if_info_eth</innerclass>
    <innerclass refid="structdmcam__dev__if__info__fil" prot="public">itof_dev_if_info_fil</innerclass>
    <innerclass refid="structdmcam__dev__if__info__t" prot="public">itof_dev_if_info_t</innerclass>
    <innerclass refid="uniondmcam__dev__ver__u" prot="public">itof_dev_ver_u</innerclass>
    <innerclass refid="structdmcam__dev__t" prot="public">itof_dev_t</innerclass>
    <innerclass refid="structdmcam__camera__para__t" prot="public">dmcam_camera_para_t</innerclass>
    <innerclass refid="structdmcam__param__roi__t" prot="public">itof_param_roi_t</innerclass>
    <innerclass refid="structdmcam__cap" prot="public">itof_cap</innerclass>
    <innerclass refid="uniondmcam__param__val__u" prot="public">itof_param_val_u</innerclass>
    <innerclass refid="structdmcam__param__item__t" prot="public">itof_param_item_t</innerclass>
    <innerclass refid="structdmcam__frame__info__t" prot="public">itof_frame_info_t</innerclass>
    <innerclass refid="structdmcam__frame__t" prot="public">itof_frame_t</innerclass>
    <innerclass refid="structdmcam__cap__cfg__t" prot="public">itof_cap_cfg_t</innerclass>
    <innerclass refid="uniondmcam__filter__args__u" prot="public">itof_filter_args_u</innerclass>
    <innerclass refid="structdmcam__cmap__cfg" prot="public">itof_cmap_cfg</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="dmcam_8h_1afeb929170f02c58b65b7123b7ed222d7" prot="public" static="no">
        <name>include</name>
        <initializer>&lt;stdbool.h&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="41" column="19"/>
      </memberdef>
      <memberdef kind="define" id="dmcam_8h_1aa314cddeed042864a00d211c1af01fa3" prot="public" static="no">
        <name>IT_NAME</name>
        <initializer>&quot;DMCAM&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="45" column="9" bodyfile="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dmcam_8h_1aaab8da01f59b47aebd810b9818d0f97d" prot="public" static="no">
        <name>IT_VERSION_MAJOR</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="46" column="9" bodyfile="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dmcam_8h_1a2aa0d880d35a6b7abb3271df9771a10d" prot="public" static="no">
        <name>IT_VERSION_MINOR</name>
        <initializer>80</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="47" column="9" bodyfile="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dmcam_8h_1add4743608131b540c253d438758fde6e" prot="public" static="no">
        <name>IT_VERSION_REV</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="48" column="9" bodyfile="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dmcam_8h_1ac578e0b95d1d89424687e7c38ef9e12b" prot="public" static="no">
        <name>IT_VERSION_STR</name>
        <initializer>&quot;v1.80.5&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="49" column="9" bodyfile="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dmcam_8h_1aa9de6c26a8241d64aa52c76acded6329" prot="public" static="no">
        <name>ITOF_ERR_CAP_FRAME_DISCARD</name>
        <initializer>(3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="51" column="9" bodyfile="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dmcam_8h_1a1ae338651ed063f907efb9dc49ae7646" prot="public" static="no">
        <name>ITOF_ERR_CAP_WRONG_STATE</name>
        <initializer>(-2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="52" column="9" bodyfile="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dmcam_8h_1a57a52c64b06f14e0375816f570e2358e" prot="public" static="no">
        <name>ITOF_ERR_CAP_CANCEL</name>
        <initializer>(-3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="53" column="9" bodyfile="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dmcam_8h_1a160c9fba29606d8e1454a94cc959f72a" prot="public" static="no">
        <name>ITOF_ERR_CAP_TIMEOUT</name>
        <initializer>(-5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="54" column="9" bodyfile="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dmcam_8h_1acc1cd5678b390f96b9b930410dbb4536" prot="public" static="no">
        <name>ITOF_ERR_CAP_STALL</name>
        <initializer>(-7)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="55" column="9" bodyfile="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dmcam_8h_1a4fabeba6b6b6b358168b59af7321cd76" prot="public" static="no">
        <name>ITOF_ERR_CAP_ERROR</name>
        <initializer>(-8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="56" column="9" bodyfile="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dmcam_8h_1a3cb7af69ff12f34c3ce7758a093c10c6" prot="public" static="no">
        <name>ITOF_ERR_CAP_EOF</name>
        <initializer>(-9)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="57" column="9" bodyfile="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dmcam_8h_1abe442c939926a6e89a5ae2d33365d471" prot="public" static="no">
        <name>ITOF_ERR_CAP_UNKNOWN</name>
        <initializer>(-10)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="58" column="9" bodyfile="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dmcam_8h_1a0162f0e3a1ba3630624e27484b54aee3" prot="public" static="no">
        <name>IT_SEEK_SET</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="60" column="9" bodyfile="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dmcam_8h_1ab6c04b590cb1c40f677b30f13c0d4ec4" prot="public" static="no">
        <name>IT_SEEK_CUR</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="61" column="9" bodyfile="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dmcam_8h_1a73af0413a42e757f342217a861677411" prot="public" static="no">
        <name>IT_SEEK_END</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="62" column="9" bodyfile="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dmcam_8h_1afe9655901debd8cfe6196d1890990ade" prot="public" static="no">
        <name>API_DEPRECATED_FOR</name>
        <param><defname>f</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="70" column="10" bodyfile="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dmcam_8h_1a08a1ffd181f816039592e1803d45bc23" prot="public" static="no">
        <name>API_DEPRECATED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="71" column="9" bodyfile="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="dmcam_8h_1a89e2a87368200f4f23d20c9703c81e84" prot="public" static="no">
        <name>itof_dev_if_e</name>
        <enumvalue id="dmcam_8h_1a89e2a87368200f4f23d20c9703c81e84afc34a3f0585cbf13433a187cee58fd6f" prot="public">
          <name>DEV_IF_USB</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a89e2a87368200f4f23d20c9703c81e84aed5a947d36ce29682f9659200db1ba58" prot="public">
          <name>DEV_IF_ETH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a89e2a87368200f4f23d20c9703c81e84a15be48a922359eaac794876b01648176" prot="public">
          <name>DEV_IF_FILE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a89e2a87368200f4f23d20c9703c81e84a93800477040f962c01497cd686fe501b" prot="public">
          <name>DEV_IF_NONE</name>
          <initializer>= 99</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>camera interface enum </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="75" column="1" bodyfile="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" bodystart="75" bodyend="81"/>
      </memberdef>
      <memberdef kind="enum" id="dmcam_8h_1aec561b7d4a2678a8002879106a04fa17" prot="public" static="no">
        <name>itof_log_level_e</name>
        <enumvalue id="dmcam_8h_1aec561b7d4a2678a8002879106a04fa17a8fa9f12103da446ab4f3d3dc2fcf7f5d" prot="public">
          <name>LOG_LEVEL_TRACE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1aec561b7d4a2678a8002879106a04fa17a538b2b6e011479d408ecd2be0f6d6177" prot="public">
          <name>LOG_LEVEL_DEBUG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1aec561b7d4a2678a8002879106a04fa17aedee1e3159bfe7d918b6e29873c5aee4" prot="public">
          <name>LOG_LEVEL_INFO</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1aec561b7d4a2678a8002879106a04fa17a99c1e5c8e6d557f3993b9ab54a0107f4" prot="public">
          <name>LOG_LEVEL_WARN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1aec561b7d4a2678a8002879106a04fa17a5b40f003febbc3b535649d63f4b8a44f" prot="public">
          <name>LOG_LEVEL_ERROR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1aec561b7d4a2678a8002879106a04fa17a69dacb1837e1e37c6ed34cc2ee1d8848" prot="public">
          <name>LOG_LEVEL_NONE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>log levels </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="162" column="1" bodyfile="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" bodystart="162" bodyend="169"/>
      </memberdef>
      <memberdef kind="enum" id="dmcam_8h_1a7ec885c3f24643fde95ec67c1e171bc4" prot="public" static="no">
        <name>itof_dev_rst_e</name>
        <enumvalue id="dmcam_8h_1a7ec885c3f24643fde95ec67c1e171bc4a29949e60507c5ea0cd126994fc3deee5" prot="public">
          <name>DEV_RST_DEV</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a7ec885c3f24643fde95ec67c1e171bc4aa7d7bb1641fc57e821dee1747fff2232" prot="public">
          <name>DEV_RST_CAM0</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a7ec885c3f24643fde95ec67c1e171bc4a4e637fe073781658601b3f8b639ed555" prot="public">
          <name>DEV_RST_CAM1</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a7ec885c3f24643fde95ec67c1e171bc4a3cd3242aef99cd4f38bcfeb0285a5162" prot="public">
          <name>DEV_RST_USB</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a7ec885c3f24643fde95ec67c1e171bc4a64798aac918bcf4db9bacca977d5b037" prot="public">
          <name>DEV_RST_IR1</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a7ec885c3f24643fde95ec67c1e171bc4adf86c63de812a3bdc0572b9d1fe3be57" prot="public">
          <name>DEV_RST_IR2</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a7ec885c3f24643fde95ec67c1e171bc4a74a405bb7e75c47219b63847612ddff5" prot="public">
          <name>DEV_RST_MCU</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a7ec885c3f24643fde95ec67c1e171bc4a4c1d47a60340d0d2a6601318ce562eac" prot="public">
          <name>DEV_RST_CNT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="172" column="1" bodyfile="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" bodystart="171" bodyend="182"/>
      </memberdef>
      <memberdef kind="enum" id="dmcam_8h_1a0a574c8f0b346da5c06ddefbb839018f" prot="public" static="no">
        <name>itof_dev_mode_e</name>
        <enumvalue id="dmcam_8h_1a0a574c8f0b346da5c06ddefbb839018fa492aeba083ac7d63cc9b1885fef6ae51" prot="public">
          <name>DEV_MODE_NORMAL</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a0a574c8f0b346da5c06ddefbb839018faa6881d5b9f474c7e649156cf1d178aa9" prot="public">
          <name>DEV_MODE_DFU</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a0a574c8f0b346da5c06ddefbb839018fa3f161e53280a4c6da43a9f8a5ce75c33" prot="public">
          <name>DEV_MODE_TEST</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a0a574c8f0b346da5c06ddefbb839018fa00e689c6cbf8bf6ee3c5dd904ea8e56d" prot="public">
          <name>DEV_MODE_DATA_UP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="185" column="1" bodyfile="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" bodystart="184" bodyend="190"/>
      </memberdef>
      <memberdef kind="enum" id="dmcam_8h_1a7d06d986a2de30a284ebb4fd110314f5" prot="public" static="no">
        <name>itof_dev_reg_e</name>
        <enumvalue id="dmcam_8h_1a7d06d986a2de30a284ebb4fd110314f5a56dce8b1f96c59a6f3324257682c4eac" prot="public">
          <name>DEV_REG_RESERVED</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a7d06d986a2de30a284ebb4fd110314f5aec99c2403a9c2c0251371f0144d1b367" prot="public">
          <name>DEV_REG_CAM0</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a7d06d986a2de30a284ebb4fd110314f5a42408ef5c1f4ba92a84527a7d3f07e7a" prot="public">
          <name>DEV_REG_CAM1</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a7d06d986a2de30a284ebb4fd110314f5aa8a04f969ef3f4f30b2a297238ad1608" prot="public">
          <name>DEV_REG_IR_0</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a7d06d986a2de30a284ebb4fd110314f5aeb42c51684380ad40bc87c4565ab5ff2" prot="public">
          <name>DEV_REG_IR_1</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="192" column="1" bodyfile="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" bodystart="192" bodyend="198"/>
      </memberdef>
      <memberdef kind="enum" id="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aaf" prot="public" static="no">
        <name>itof_frame_mode_e</name>
        <enumvalue id="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aafadcea6c1336a55c2797d465b70c6c0eaf" prot="public">
          <name>FRAME_FMT_DCSx1</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>gray </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aafa82c660bcd4fa45880e18975a8892e8a9" prot="public">
          <name>FRAME_FMT_DUAL_MGX_SINE_PIDELAY_DCSx2</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>dist DCS*2, sine mode,with pi delay </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aafa4ad84d71a4a5a53b95c8ff87bab7ff8e" prot="public">
          <name>FRAME_FMT_SINGLE_MGX_SINE_PIDELAY_DCSx4</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>single MGX dist DCS*4, sine mode,with pi dealy </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aafaeba23929372ecdf8b8bda6f7f727aae6" prot="public">
          <name>FRAME_FMT_DUAL_MGX_PN_NOPIDELAY_DCSx1</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>dist DCS*1, PN mode,without pi delay </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aafa4a2276701fe04a28722e16a0ad1ad6fe" prot="public">
          <name>FRAME_FMT_DUAL_MGX_SINE_NOPIDELAY_DCSx1</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>dist DCS*1,no sine mode,without pi delay </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aafa4689ffd17292091786ebe1e1b44a14a5" prot="public">
          <name>FRAME_FMT_SINGLE_MGX_PN_PIDELAY_DCSx4</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>single MGX, dist DCS*4, PN mode,with pi delay </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aafa8a7c1186599db26d26c7ac73d48a248b" prot="public">
          <name>FRAME_FMT_DUAL_MGX_PN_PIDELAY_DCSx2</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>dist DCS*2, PN mode,with pi delay </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aafac5f6bf7b6d4b916486f40ed6e5c646e4" prot="public">
          <name>FRAME_FMT_SINGLE_MGX_PN_NOPIDELAY_DCSx2</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>single MGX dist DCS*2, PN mode,with out pi dealy </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aafa14e38232a7b669a813665dff1aa2a5ea" prot="public">
          <name>FRAME_FMT_SINGLE_MGX_SINE_NOPIDELAY_DCSx2</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>single MGX dist DCS*2, nosine mode,with out dealy </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aafaa9b1c66b6bf0d81612ae0c849c5206be" prot="public">
          <name>FRAME_FMT_PHASE</name>
          <initializer>= 0x0A</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>phase frame data </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aafad8ac1690cf4a67043fbd2992c233bbc6" prot="public">
          <name>FRAME_FMT_GRAY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>reserved </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aafa51d34c6b5f27b3b88ca301fbed28ae38" prot="public">
          <name>FRAME_FMT_LOSSY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>reserved </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aafa0d913adac54fc528731c77b0a9390c35" prot="public">
          <name>FRAME_FMT_QI</name>
          <initializer>= 0x0D</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>reserved </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aafa4ca8587e008f0d4e279433b4653df00c" prot="public">
          <name>FRAME_FMT_QI_DUAL_FREQ</name>
          <initializer>= 0x0E</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>reserved </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aafa7732afde0dee2620b5251b96e1d34387" prot="public">
          <name>FRAME_FMT_HDR_8DCS</name>
          <initializer>= 0X0F</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>HDR mode </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aafa9bf964d91626ab4e2a904e3e7daa8fb2" prot="public">
          <name>FRAME_FMT_QI_SHIFT_LOSSLESS</name>
          <initializer>= 0X10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>QI packed mode </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aafa7fb235d7b477fa70fa7784e8fdcab84d" prot="public">
          <name>FRAME_FMT_QI_SHIFT_LOSSLESS_DUAL_FREQ</name>
          <initializer>= 0X11</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Dual frequency QI packed mode </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aafa5bb19d7052bc75651b3dfbfd8960be29" prot="public">
          <name>FRAME_FMT_CNT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="200" column="1" bodyfile="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" bodystart="200" bodyend="219"/>
      </memberdef>
      <memberdef kind="enum" id="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25" prot="public" static="no">
        <name>itof_dev_param_e</name>
        <enumvalue id="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25a76d6eaab530f9961fab23bcd05c35df8" prot="public">
          <name>PARAM_DEV_MODE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25a61c2db31bf1dfd49844c12c87df7e45a" prot="public">
          <name>PARAM_MOD_FREQ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>modulation frequency </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25a02ed538fba58bfc45b5f0a9f43a16a9f" prot="public">
          <name>PARAM_INFO_VENDOR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>production vendor information </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25a624a16e6b900ce42cf7e1e1a2500c0a6" prot="public">
          <name>PARAM_INFO_PRODUCT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>production information </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25a5ebedfc0309659aa9bbe94c4d68a1558" prot="public">
          <name>PARAM_INFO_CAPABILITY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>production capability </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25af6d44a6b5c2b32ca42331895792eba11" prot="public">
          <name>PARAM_INFO_SERIAL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>porduction serials id </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25af2de45b6792cfe201ab6e1bd416124a8" prot="public">
          <name>PARAM_INFO_VERSION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>HW&amp;SW info </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25a9c2312f91623f51dd9553e32252122b6" prot="public">
          <name>PARAM_INFO_SENSOR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>part version, chip id, wafer id </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25a8864a5235e1657a70ba68c258abf2487" prot="public">
          <name>PARAM_INFO_CALIB</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>get calibration info </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25a41ad95e659bee3e7022aeab98502b2d5" prot="public">
          <name>PARAM_ROI</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ROI set/get </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25ae11156db2a7c041ec06ccc3eb685fabc" prot="public">
          <name>PARAM_FRAME_FORMAT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>frame information,eg.dcs1for gray,4 dcs for distance </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25afdd90eadb447517f5369d5ed9c8887c5" prot="public">
          <name>PARAM_ILLUM_POWER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>illumination power set/get </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25af527e28a52adf072b237e588a3705130" prot="public">
          <name>PARAM_FRAME_RATE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>frame rate set/get </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25aa0797722cff186a6bc118b42c3886892" prot="public">
          <name>PARAM_INTG_TIME</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>integration time set/get </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25aed812fe99d506385053dd6ab116abfcd" prot="public">
          <name>PARAM_PHASE_CORR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>phase offset correction </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25aa881a29d277c20733b4dd62bc9568719" prot="public">
          <name>PARAM_TEMP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>&lt;Get camera temperature-----------<mdash/> </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25ad9dfa7c4db94130d522a939f7e8caa36" prot="public">
          <name>PARAM_HDR_INTG_TIME</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>&lt;Setting HDR integration time param </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25a2c4ccc09ee8dad10a612f47318fdd1a4" prot="public">
          <name>PARAM_SYNC_DELAY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>&lt;delay ms for sync use </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25acd546e96053888933381245c403feb45" prot="public">
          <name>PARAM_SYS_CALIB_COEFF</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>system calibration coefficent </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25a08fe50322b2190a01d2d3d6d7bc55cff" prot="public">
          <name>PARAM_SYNC_SYS_TIME</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>set/get module time </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25a9304cd07f34a874003129ad7686d99af" prot="public">
          <name>PARAM_AMBIENT_LIGHT_COEFF</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>set ambient light calibration coeff. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25abf882f2713d7467434f830bbf7c29895" prot="public">
          <name>PARAM_DUAL_MOD_FREQ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>set mod_freq </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25a4ecda43a6844938cd47c78c4446728ed" prot="public">
          <name>PARAM_INFO_LENS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Get lens param </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25abb748675e4cac7971e83f7f931537850" prot="public">
          <name>PARAM_FLIP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>image flip </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25a2a879b4f73e9fdabee6f6e1efcd0144c" prot="public">
          <name>PARAM_RESERVED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>rererved </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25af20cd0c82fb757294dcb117ab0168c07" prot="public">
          <name>PARAM_INFO_CALIB_FREQ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>calibration information </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25afcb18cb0f42ed6c329f8e2bffdb7c383" prot="public">
          <name>PARAM_DEL_CALIB_DATA</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Delete calibration data </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25a0278bf7c87693f37b2ff67eab7a263c3" prot="public">
          <name>PARAM_ENUM_COUNT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>dmcam param ID </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="222" column="1" bodyfile="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" bodystart="222" bodyend="253"/>
      </memberdef>
      <memberdef kind="enum" id="dmcam_8h_1a887b1ccfc2a7795bd3ea34ff8fa9d3c8" prot="public" static="no">
        <name>itof_bin_data_type_e</name>
        <enumvalue id="dmcam_8h_1a887b1ccfc2a7795bd3ea34ff8fa9d3c8a962271523d419bf4441db418deeb1ec0" prot="public">
          <name>BIN_DATA_TYPE_MCU</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a887b1ccfc2a7795bd3ea34ff8fa9d3c8a44b6e0b510ac3a77edbd7e16fdd8538a" prot="public">
          <name>BIN_DATA_TYPE_TFC</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a887b1ccfc2a7795bd3ea34ff8fa9d3c8a970dcac16b5757204b7d9700e55fc6ee" prot="public">
          <name>BIN_DATA_TYPE_CALIB</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="255" column="1" bodyfile="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" bodystart="255" bodyend="259"/>
      </memberdef>
      <memberdef kind="enum" id="dmcam_8h_1aa30b1b13d86ada87d60d90ea9c2bdf30" prot="public" static="no">
        <name>itof_binning_mode_e</name>
        <enumvalue id="dmcam_8h_1aa30b1b13d86ada87d60d90ea9c2bdf30a8bff4393050281ba9f3d5fb558d0da37" prot="public">
          <name>IT_BINNING_1X1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1aa30b1b13d86ada87d60d90ea9c2bdf30a31595225859eeb0b1a9a09a04521db42" prot="public">
          <name>IT_BINNING_2X2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1aa30b1b13d86ada87d60d90ea9c2bdf30a7d29e76e699099d39370d7a4b90aa667" prot="public">
          <name>IT_BINNING_4X4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1aa30b1b13d86ada87d60d90ea9c2bdf30ac8b1620d57535246295a007c6011cb8c" prot="public">
          <name>IT_BINNING_8X8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1aa30b1b13d86ada87d60d90ea9c2bdf30aa0b283ca04bdb73de8246bbc35ab79ba" prot="public">
          <name>IT_BINNING_2X4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1aa30b1b13d86ada87d60d90ea9c2bdf30a64e45ed7f190f64a1ed15973a6679d38" prot="public">
          <name>IT_BINNING_CNT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>binning mode </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="262" column="1" bodyfile="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" bodystart="262" bodyend="270"/>
      </memberdef>
      <memberdef kind="enum" id="dmcam_8h_1a4d0042f323361e9a187bb1ff827cdf0a" prot="public" static="no">
        <name>itof_frame_fmt_e</name>
        <enumvalue id="dmcam_8h_1a4d0042f323361e9a187bb1ff827cdf0aa7ad67d3dda4e333f61875d8cefba4a4a" prot="public">
          <name>IT_FRAME_FMT_RAW_DIST</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>distance data without calibration </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a4d0042f323361e9a187bb1ff827cdf0aae4afa6254f90c44cbeed99a1668f75f4" prot="public">
          <name>IT_FRAME_FMT_DISTANCE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>distance with calibration </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a4d0042f323361e9a187bb1ff827cdf0aa7334fab02874d8f78f90aa49a723ac3e" prot="public">
          <name>IT_FRAME_FMT_GRAY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Confidence data </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a4d0042f323361e9a187bb1ff827cdf0aa5b9e78b699891c38170dc4e54724d934" prot="public">
          <name>IT_FRAME_FMT_PCLOUD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>pointcloud data </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a4d0042f323361e9a187bb1ff827cdf0aaa6983e77e40590683a2e395a135f1b0c" prot="public">
          <name>IT_FRAME_FMT_RGB</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>reserved </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Framae data format </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="411" column="1" bodyfile="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" bodystart="411" bodyend="418"/>
      </memberdef>
      <memberdef kind="enum" id="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fb" prot="public" static="no">
        <name>itof_filter_id_e</name>
        <enumvalue id="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fbad5374922c1c7929f504e16048bd54af6" prot="public">
          <name>ITOF_FILTER_ID_LEN_CALIB</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>lens calibration </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fba82452a4cc25432fd8f87e8003e3b8c78" prot="public">
          <name>ITOF_FILTER_ID_PIXEL_CALIB</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>pixel calibration </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fba130c93d0919d89b9b9977cfc31f760f7" prot="public">
          <name>ITOF_FILTER_ID_DEPTH_FILTER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Depth filter </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fba88b63c99a08d9fff81fbde67d014ec99" prot="public">
          <name>ITOF_FILTER_ID_RESERVED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>RESERVED </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fbab10d5c87df0820cfdf3c92aae0da582f" prot="public">
          <name>ITOF_FILTER_ID_AMP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Amplitude filter control </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fba54e9a9433ad6187c3e175bdb340d5832" prot="public">
          <name>ITOF_FILTER_ID_AUTO_INTG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>auto integration filter enable : use sat_ratio to adjust </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fbaf58599b5087bdd95b7135e6efceec1f8" prot="public">
          <name>ITOF_FILTER_ID_SYNC_DELAY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>sync delay </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fbab06fa287b6cabf9e96e41fed3518e29d" prot="public">
          <name>ITOF_FILTER_ID_TEMP_MONITOR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>temperature monitor </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fba9619340bf83bcc5207a8d7ff63ab9f9c" prot="public">
          <name>ITOF_FILTER_ID_HDR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>HDR mode </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fba225ba19c884c049f13574597289b613a" prot="public">
          <name>ITOF_FILTER_ID_OFFSET</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>set offset for calc distance </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fba6f3845dee52dc985d3f45f71424a7932" prot="public">
          <name>ITOF_FILTER_ID_SPORT_MODE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>set sport mode </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fba70f44611100dcdf29ecb33c542f4e473" prot="public">
          <name>ITOF_FILTER_ID_SYS_CALIB</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>using system calibration param </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fbaeaa40879a14eec486e9c24f20c2f025c" prot="public">
          <name>ITOF_FILTER_ID_AMBIENT_LIGHT_CALIB</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>using ambient light calib calibration param </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fbabe322bbe4858095c020a3ae3921d25f1" prot="public">
          <name>ITOF_FILTER_ID_FLYNOISE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>fly noise filter </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fba1f0cd7c9136c30ea311236dc35197038" prot="public">
          <name>ITOF_FILTER_ID_TEMP_CALIB</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fba9d8766d8b1c0898d67f2b463c1bce482" prot="public">
          <name>ITOF_FILTER_ID_MEDIAN</name>
          <initializer>= ITOF_FILTER_ID_DEPTH_FILTER</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>MEDIAN is replaced with depth filter </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fbacbbef69a4246a1a294d4db4254585fe7" prot="public">
          <name>ITOF_FILTER_CNT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>filter ID </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="1063" column="1" bodyfile="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" bodystart="1063" bodyend="1083"/>
      </memberdef>
      <memberdef kind="enum" id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7" prot="public" static="no">
        <name>itof_cmap_palette_e</name>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7aa02ad066b7713b7653076ed3b379cb39" prot="public">
          <name>ITOF_CMAP_EPC</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7ada922268943b40a9c3675b111a086208" prot="public">
          <name>ITOF_CMAP_HSV</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7a8f9b45fecadb1b1671b9f826ef5781c6" prot="public">
          <name>ITOF_CMAP_BWR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7ad72c442f4ad88dffd1106fa1c851b88a" prot="public">
          <name>ITOF_CMAP_JET</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7a7dea57b8c9a6f8c6b432846a9c375150" prot="public">
          <name>ITOF_CMAP_GIST_RAINBOW</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7acb9ee272ae76278fd62fa308b32c8dac" prot="public">
          <name>ITOF_CMAP_RAINBOW</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7a1c8a8f38c2f3fc2d8c60fb5bb8fcfe7e" prot="public">
          <name>ITOF_CMAP_SPECTRAL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7ad4e5ea4e3d342db2c06d77c621408ce1" prot="public">
          <name>ITOF_CMAP_VIRIDIS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7afd3d359b45daaf5cfdbf5beaf7aa0e6a" prot="public">
          <name>ITOF_CMAP_INFERNO</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7aae0234a658afa52f56094d62e94409d6" prot="public">
          <name>ITOF_CMAP_PLASMA</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7a9a6fab0932ee9e3df652dc4a583b00cb" prot="public">
          <name>ITOF_CMAP_MAGMA</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7aa88d41fcf3e041b4e1d30153728825ad" prot="public">
          <name>ITOF_CMAP_BLUES</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7a9db7aae8fee5e140d3b92ccd5bc45f14" prot="public">
          <name>ITOF_CMAP_BUGN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7aa7c2a7a3f43aa929c29c6da5a015d343" prot="public">
          <name>ITOF_CMAP_BUPU</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7a832f4988f910320b1819a39a5a03c585" prot="public">
          <name>ITOF_CMAP_GNBU</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7a4d81c8c2388fd11b6be82efcd60e0cbf" prot="public">
          <name>ITOF_CMAP_GREENS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7a87b1db0272f7c56b576c294efc5f6b13" prot="public">
          <name>ITOF_CMAP_GREYS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7a1172d419e7194c5e84c5a1ce8f58afb2" prot="public">
          <name>ITOF_CMAP_ORANGES</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7ace56dba40ed32940ea4a0c8b5ca7a835" prot="public">
          <name>ITOF_CMAP_ORRD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7a62fb07239d3167fa0aabe8d5ed6bbc8e" prot="public">
          <name>ITOF_CMAP_PUBU</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7afdcb38f4e5d94f0fdaf3a3cffba2fb6b" prot="public">
          <name>ITOF_CMAP_PUBUGN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7adfdf064bc7a67cb9a267832b5b8d54d8" prot="public">
          <name>ITOF_CMAP_PURD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7a5e5828b3f4d85e084fa6df1cbab1a9e8" prot="public">
          <name>ITOF_CMAP_PURPLES</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7aa7716c80faa552ff95a72095ebfef9aa" prot="public">
          <name>ITOF_CMAP_RDPU</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7aedbc8dca3cd0096fc17a2fdeef0c70b9" prot="public">
          <name>ITOF_CMAP_REDS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7a6e4352a8a165ae55b59964ca78f7849a" prot="public">
          <name>ITOF_CMAP_YLGN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7a69f2c3bb9b2fe5eec3b48dac7e6ee373" prot="public">
          <name>ITOF_CMAP_YLGNBU</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7aafd851ac774ab3530e7f4731fb5d691f" prot="public">
          <name>ITOF_CMAP_YLORBR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7aeede10b2a6d6df5d3aa675d8a45e82bf" prot="public">
          <name>ITOF_CMAP_YLORRD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7ad3763165377f53ced1ea688ad681b529" prot="public">
          <name>ITOF_CMAP_AFMHOT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7a6bf7c1cd3d03578f32bf96f767586958" prot="public">
          <name>ITOF_CMAP_AUTUMN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7a8f8aa2b346a93817ce993e654c9f3363" prot="public">
          <name>ITOF_CMAP_BONE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7a1641ad345a1d3fe394d334425a084120" prot="public">
          <name>ITOF_CMAP_COOL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7a9f6457d009e49b030db2861f53449fe4" prot="public">
          <name>ITOF_CMAP_COPPER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7a5e5aba29331df471e6aae5d9b0d5d241" prot="public">
          <name>ITOF_CMAP_GIST_HEAT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7a894be0d6288c0ddab3e2f544f831b898" prot="public">
          <name>ITOF_CMAP_GRAY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7aa4dffafa5c247480c2b6edfabec013e3" prot="public">
          <name>ITOF_CMAP_HOT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7aba8e2711c22dc00bbada3b658314a5cd" prot="public">
          <name>ITOF_CMAP_PINK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7a49f8d21fe41162c30bc53f3a4407ff1a" prot="public">
          <name>ITOF_CMAP_SPRING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7ab2f5dc88672997dc1db65b88b12e7e24" prot="public">
          <name>ITOF_CMAP_SUMMER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7aee832c9d6b3e5c8e1f48932a93901b9d" prot="public">
          <name>ITOF_CMAP_WINTER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7aa41a217bdd693faad39d027ee96f6252" prot="public">
          <name>ITOF_CMAP_BRBG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7afd30035d4f1364bbfadb6a1949b14598" prot="public">
          <name>ITOF_CMAP_COOLWARM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7a12caf75ad45e87bb467128a2805a6836" prot="public">
          <name>ITOF_CMAP_PIYG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7a1bf2435a3b7167036fa118fe942380b8" prot="public">
          <name>ITOF_CMAP_PRGN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7a2b1e62ae2ce02bd5c4906158d1eef460" prot="public">
          <name>ITOF_CMAP_PUOR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7aab9ab1d934011882396d61d9e926433a" prot="public">
          <name>ITOF_CMAP_RDBU</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7a8a93515e9c4c7e3be13f34a86db30999" prot="public">
          <name>ITOF_CMAP_RDGY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7a5fbe68a065f71571402e5e4b681bdd6e" prot="public">
          <name>ITOF_CMAP_RDYLBU</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7a9ad9ebed3fdeff12ba342f6b6e9d4901" prot="public">
          <name>ITOF_CMAP_RDYLGN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7a5b4ece1addc7d752eeb5a978dcaf80a3" prot="public">
          <name>ITOF_CMAP_SEISMIC</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7a9fa7ef6ae07f46b6231656f979fd28fc" prot="public">
          <name>ITOF_CMAP_GIST_EARTH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7aee06eb47cbf96a3cff36065ce898a346" prot="public">
          <name>ITOF_CMAP_TERRAIN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7ace3f50db08c0d9c07971fd62106613d2" prot="public">
          <name>ITOF_CMAP_OCEAN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7abdf920c93354a80664bba91b0ec4365d" prot="public">
          <name>ITOF_CMAP_GIST_STERN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7a4392345fe72a800ebc8598f3a48ac66e" prot="public">
          <name>ITOF_CMAP_BRG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7ad47fc37f58e830970063ed148cfe108e" prot="public">
          <name>ITOF_CMAP_CMRMAP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7ac28aec4c8daa9498bd18f44dd2475166" prot="public">
          <name>ITOF_CMAP_CUBEHELIX</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7a6e3c25f49a12dfebfbc44b952b586c96" prot="public">
          <name>ITOF_CMAP_GNUPLOT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7a7811226f9cc812142c7d7447c41a2805" prot="public">
          <name>ITOF_CMAP_GNUPLOT2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7aa6b37e3177f38f0dde0a56d78af7b53f" prot="public">
          <name>ITOF_CMAP_GIST_NCAR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7a4bdb2bc91d6197d1d02133b05db84b81" prot="public">
          <name>ITOF_CMAP_NIPY_SPECTRAL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7aee5ea2d04777447969bb7d5192a801f3" prot="public">
          <name>ITOF_CMAP_FLAG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7a3118ad6b6286ab13150ab82e6aa51be5" prot="public">
          <name>ITOF_CMAP_PRISM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1ad19527184c9c7938a88a29e89cbebbd7ae6f28059d62894e6512aa70efee2c5dc" prot="public">
          <name>ITOF_CMAP_COUNT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="1147" column="1" bodyfile="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" bodystart="1147" bodyend="1214"/>
      </memberdef>
      <memberdef kind="enum" id="dmcam_8h_1a7574db3b1665244ce8a46f8839ce49d2" prot="public" static="no">
        <name>itof_cmap_outfmt_e</name>
        <enumvalue id="dmcam_8h_1a7574db3b1665244ce8a46f8839ce49d2a0f1818943889f4c81adc13c04d60517f" prot="public">
          <name>ITOF_CMAP_OUTFMT_RGB</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a7574db3b1665244ce8a46f8839ce49d2a864b9a0090e380133ebc1d33e5162ba0" prot="public">
          <name>ITOF_CMAP_OUTFMT_RGBA</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a7574db3b1665244ce8a46f8839ce49d2a5c5ce16961cfaed9df33e5aca1d913f4" prot="public">
          <name>ITOF_CMAP_OUTFMT_BGR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a7574db3b1665244ce8a46f8839ce49d2a4fd19e2e57ef200da40233b22895a49e" prot="public">
          <name>ITOF_CMAP_OUTFMT_COUNT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>DMCAM color map output format definition </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="1217" column="1" bodyfile="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" bodystart="1217" bodyend="1223"/>
      </memberdef>
      <memberdef kind="enum" id="dmcam_8h_1a89f39a1f25eaa641fcabee628dab19f3" prot="public" static="no">
        <name>itof_frame_save_fmt_t</name>
        <enumvalue id="dmcam_8h_1a89f39a1f25eaa641fcabee628dab19f3a882e4858b23c918647703be83c71a330" prot="public">
          <name>ITOF_FRAME_SAVE_FLOAT32</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a89f39a1f25eaa641fcabee628dab19f3ace6ebcef16b39cb963fe2d87c6ff0d1f" prot="public">
          <name>ITOF_FRAME_SAVE_UINT32</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a89f39a1f25eaa641fcabee628dab19f3ae9ac65f69b694e62b31cf2c82f70ae27" prot="public">
          <name>ITOF_FRAME_SAVE_UINT16</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dmcam_8h_1a89f39a1f25eaa641fcabee628dab19f3a0bc01c35f94cfc59c179869f049e0a32" prot="public">
          <name>ITOF_FRAME_SAVE_UINT8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="1333" column="1" bodyfile="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" bodystart="1333" bodyend="1339"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="dmcam_8h_1af4e19db9883abb468473e1417f08f44d" prot="public" static="no">
        <type>struct <ref refid="structdmcam__cap" kindref="compound">itof_cap</ref></type>
        <definition>typedef struct itof_cap  itof_param_cap_t</definition>
        <argsstring></argsstring>
        <name>itof_param_cap_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="308" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="dmcam_8h_1a7849459a06fce3a8ebcb2ed1f3973eac" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* itof_cap_frdy_f)(itof_dev_t *dev, itof_frame_t *frame)</definition>
        <argsstring>)(itof_dev_t *dev, itof_frame_t *frame)</argsstring>
        <name>itof_cap_frdy_f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>camera frame ready function prototype </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="444" column="1" bodyfile="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" bodystart="444" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dmcam_8h_1aa8a592c9c0553d896e52900ffdc99eeb" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* itof_cap_err_f)(itof_dev_t *dev, int err, void *err_args)</definition>
        <argsstring>)(itof_dev_t *dev, int err, void *err_args)</argsstring>
        <name>itof_cap_err_f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>camera frame error function prototype </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="446" column="1" bodyfile="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" bodystart="446" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dmcam_8h_1af65a973c99f7fa7ce0edbcc6d4dc1b79" prot="public" static="no">
        <type>struct <ref refid="structdmcam__cmap__cfg" kindref="compound">itof_cmap_cfg</ref></type>
        <definition>typedef struct itof_cmap_cfg itof_cmap_cfg_t</definition>
        <argsstring></argsstring>
        <name>itof_cmap_cfg_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="1228" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="dmcam_8h_1a684254b9b411831a876fb5d2c3acdb3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void itof_init</definition>
        <argsstring>(const char *log_fname)</argsstring>
        <name>itof_init</name>
        <param>
          <type>const char *</type>
          <declname>log_fname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Init the DM camera layer. It should be called before any dmcam API is invoked.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>log_fname</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] specified log file name of dmcam layer. if NULL, the default log (itof_YYYYMMDD.log) is used. if empty string &quot;&quot; is used, no log will generated </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="479" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1a8e2d89f44424a284a00d5189fdb78812" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void itof_uninit</definition>
        <argsstring>(void)</argsstring>
        <name>itof_uninit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Uninit the DM camera layer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="485" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1ac05e4d01759cbead7b662595350b7d12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void itof_log_cfg</definition>
        <argsstring>(itof_log_level_e console_level, itof_log_level_e file_level, itof_log_level_e usb_level)</argsstring>
        <name>itof_log_cfg</name>
        <param>
          <type><ref refid="dmcam_8h_1aec561b7d4a2678a8002879106a04fa17" kindref="member">itof_log_level_e</ref></type>
          <declname>console_level</declname>
        </param>
        <param>
          <type><ref refid="dmcam_8h_1aec561b7d4a2678a8002879106a04fa17" kindref="member">itof_log_level_e</ref></type>
          <declname>file_level</declname>
        </param>
        <param>
          <type><ref refid="dmcam_8h_1aec561b7d4a2678a8002879106a04fa17" kindref="member">itof_log_level_e</ref></type>
          <declname>usb_level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the logging configuration for dmcam layer.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>console_level</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] specified itof_log_level_e, the console log whose log level bellow this value will be suppressed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file_level</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] specified itof_log_level_e, the file log whose log level bellow this value will be suppressed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>usb_level</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] specified itof_log_level_e, the usb log whose log level bellow this value will be suppressed. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="501" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1a9ac318a393cb90d50572e5e6ca0e0fbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void itof_path_cfg</definition>
        <argsstring>(const char *path)</argsstring>
        <name>itof_path_cfg</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Setting where to save calibration data</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="511" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1a38b41f66b430a48cbc969e4f80a9b406" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* itof_path_get</definition>
        <argsstring>(void)</argsstring>
        <name>itof_path_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Getting calibration data path</para><para><simplesect kind="return"><para>_API char* </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="520" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1ad39a197d99faf734e91cfdad1a2f7f3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* itof_error_name</definition>
        <argsstring>(int error_code)</argsstring>
        <name>itof_error_name</name>
        <param>
          <type>int</type>
          <declname>error_code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>covert specified error code into error string</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>error_code</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>const char* </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="529" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1ae27b74edb35b9020e4d75002fecaf949" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int itof_dev_list</definition>
        <argsstring>(itof_dev_t *dev_list, int dev_list_num)</argsstring>
        <name>itof_dev_list</name>
        <param>
          <type><ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref> *</type>
          <declname>dev_list</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dev_list_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>list the dmcam device and fill into <ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref> array.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev_list</parametername>
</parameternamelist>
<parameterdescription>
<para>[out] device list array to be filled. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dev_list_num</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] capacity of device list</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int [out] number of dmcam device found </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="544" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1abcd7bfd3b53d62aabd4b34a4f93eb63b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref> *</type>
        <definition>itof_dev_t* itof_dev_open</definition>
        <argsstring>(itof_dev_t *dev)</argsstring>
        <name>itof_dev_open</name>
        <param>
          <type><ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>open specified dmcam device. if the device is not specified, it&apos;ll try to open the first dmcam device</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] specified dmcam device which is usally get from itof_dev_list. if Null, the first dmcam device will be opened.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>itof_dev_t* NULL = open device failed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="556" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1af927227c3fc1da50c54a1c63f4566ee2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref> *</type>
        <definition>itof_dev_t* itof_dev_open_by_fd</definition>
        <argsstring>(int fd)</argsstring>
        <name>itof_dev_open_by_fd</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>open specified dmcam device with specified fd. this is useful for android usb device.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] specified fd</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>itof_dev_t* return opened device. NULL = open device failed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="567" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1ae5da36231f829fcd19fae8cb55bbeef7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref> *</type>
        <definition>itof_dev_t* itof_dev_open_by_uri</definition>
        <argsstring>(const char *uri_str)</argsstring>
        <name>itof_dev_open_by_uri</name>
        <param>
          <type>const char *</type>
          <declname>uri_str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>open specified dmcam device with specified uri.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uri_str</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] specified URI. Following URI are supported: USB device URI: usb://bus:port or usb://bus:port:dev_addr Ethernet device URI: eth://hwid:token or eth://hwid:token FILE device URI: <ulink url="file://filename">file://filename</ulink> or filename</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>itof_dev_t* NULL = open device failed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="584" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1ad395f0de3c2c6ac11251fad93f379fac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void itof_dev_close</definition>
        <argsstring>(itof_dev_t *dev)</argsstring>
        <name>itof_dev_close</name>
        <param>
          <type><ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Close specified dmcam device.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="591" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1a9899ace6d1c2a2da066ccd8b7489b714" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* itof_dev_get_uri</definition>
        <argsstring>(itof_dev_t *dev, char *uri_str, int uri_str_len)</argsstring>
        <name>itof_dev_get_uri</name>
        <param>
          <type><ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>uri_str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>uri_str_len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get URI of specified device.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] specified device after itof_dev_open </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>uri_str</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] uri string buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>uri_str_len</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] uri string buffer len</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>const char* [out] uri string. If null, get uri failed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="604" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1a64278cba893dea9626a90ab992e14d1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool itof_dev_reset</definition>
        <argsstring>(itof_dev_t *dev, itof_dev_rst_e target)</argsstring>
        <name>itof_dev_reset</name>
        <param>
          <type><ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>itof_dev_rst_e</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reset specified target on the dev</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] dmcam device handler </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] reset taget defined in itof_dev_rst_e</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool [out] true = reset ok. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="614" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1a223ff6ed701bafde24d25ac0ac3835e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool itof_reg_batch_write</definition>
        <argsstring>(itof_dev_t *dev, itof_dev_reg_e target, uint32_t reg_base, const uint32_t *reg_vals, uint16_t reg_vals_len)</argsstring>
        <name>itof_reg_batch_write</name>
        <param>
          <type><ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>itof_dev_reg_e</type>
          <declname>target</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>reg_base</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>reg_vals</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>reg_vals_len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Batch write registers of specified target on the device.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] dmcam device handler </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] specified target defined in itof_dev_reg_e </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reg_base</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] base address of the registers </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reg_vals</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] register values to be written. All register value is denoted as UINT32 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reg_vals_len</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] count of values in reg_vals</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool [out] true = write ok. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="635" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1aa1c0fb8eb8dacf5e9bed4574c6239215" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool itof_reg_batch_read</definition>
        <argsstring>(itof_dev_t *dev, itof_dev_reg_e target, uint32_t reg_base, uint32_t *reg_vals, uint16_t reg_vals_len)</argsstring>
        <name>itof_reg_batch_read</name>
        <param>
          <type><ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>itof_dev_reg_e</type>
          <declname>target</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>reg_base</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>reg_vals</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>reg_vals_len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Batch read registers of specified target on the device.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] dmcam device handler </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] specified target defined in itof_dev_reg_e </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reg_base</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] base address of the registers </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reg_vals</parametername>
</parameternamelist>
<parameterdescription>
<para>[out] register values to be filled. All register value is denoted as UINT32 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reg_vals_len</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] count of values in reg_vals</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool [out] true = read ok. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="651" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1a7842cd6a2aee7c691e213a9486620594" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool itof_param_batch_set</definition>
        <argsstring>(itof_dev_t *dev, const itof_param_item_t *param_items, int item_cnt)</argsstring>
        <name>itof_param_batch_set</name>
        <param>
          <type><ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>const <ref refid="structdmcam__param__item__t" kindref="compound">itof_param_item_t</ref> *</type>
          <declname>param_items</declname>
        </param>
        <param>
          <type>int</type>
          <declname>item_cnt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Batch write generic parameters to specified device.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] dmcam device handler </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>param_items</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] <ref refid="structdmcam__param__item__t" kindref="compound">itof_param_item_t</ref> is used to denotes generic parameter:<itemizedlist>
<listitem><para>param_id[in]: defined in itof_dev_param_e to identify the parameters.</para></listitem><listitem><para>param_vals[in]: denotes the generic value (max = 16bytes)</para></listitem><listitem><para>param_vals_len[in]: denotes the length of value. </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>item_cnt</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] count of params in param_items</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool [out] true = operation is ok. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="670" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1ad661056e429d3ec09a81f723c2b3bd2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool itof_param_batch_get</definition>
        <argsstring>(itof_dev_t *dev, itof_param_item_t *param_items, int item_cnt)</argsstring>
        <name>itof_param_batch_get</name>
        <param>
          <type><ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="structdmcam__param__item__t" kindref="compound">itof_param_item_t</ref> *</type>
          <declname>param_items</declname>
        </param>
        <param>
          <type>int</type>
          <declname>item_cnt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Batch read generic parameters from specified device.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] dmcam device handler </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>param_items</parametername>
</parameternamelist>
<parameterdescription>
<para>[in/out] <ref refid="structdmcam__param__item__t" kindref="compound">itof_param_item_t</ref> is used to denotes generic parameter:<itemizedlist>
<listitem><para>param_id[in]: defined in itof_dev_param_e to identify the parameters.</para></listitem><listitem><para>param_vals[out]: denotes the generic value (max = 16bytes) filled by this function</para></listitem><listitem><para>param_vals_len[out]: denotes the length of value filled by this function. </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>item_cnt</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] count of params in param_items</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool [out] true = operation is ok. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="687" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1ad8d2f9ef09c4337b76124e8ec6d6c0c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool itof_cap_config_set</definition>
        <argsstring>(itof_dev_t *dev, const itof_cap_cfg_t *cfg)</argsstring>
        <name>itof_cap_config_set</name>
        <param>
          <type><ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>const <ref refid="structdmcam__cap__cfg__t" kindref="compound">itof_cap_cfg_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set specified capture configuration for specified device. This api is available from v1.58 to replace itof_cap_set_frame_buffer</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] specified dmcam device </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] specified capture configuration</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool [out] true = set OK. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="705" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1a52e0b214b3b1ccd54dd8084b7952e3cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void itof_cap_config_get</definition>
        <argsstring>(itof_dev_t *dev, itof_cap_cfg_t *cfg)</argsstring>
        <name>itof_cap_config_get</name>
        <param>
          <type><ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="structdmcam__cap__cfg__t" kindref="compound">itof_cap_cfg_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get capture configuration of specified device</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] specified dmcam device </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>[out] capture configuration to be filled </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="713" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1adf485506fef795de5084578e24f69468" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void itof_cap_set_callback_on_frame_ready</definition>
        <argsstring>(itof_dev_t *dev, itof_cap_frdy_f cb)</argsstring>
        <name>itof_cap_set_callback_on_frame_ready</name>
        <param>
          <type><ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="dmcam_8h_1a7849459a06fce3a8ebcb2ed1f3973eac" kindref="member">itof_cap_frdy_f</ref></type>
          <declname>cb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>register frame ready callback function</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] dmcam device handler </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] callback function in following format: void (<emphasis>itof_cap_frdy_f)(<ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref></emphasis>, <ref refid="structdmcam__frame__t" kindref="compound">itof_frame_t</ref>) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="723" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1ac318140ffd39ba4f227a550739b103f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void itof_cap_set_callback_on_error</definition>
        <argsstring>(itof_dev_t *dev, itof_cap_err_f cb)</argsstring>
        <name>itof_cap_set_callback_on_error</name>
        <param>
          <type><ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="dmcam_8h_1aa8a592c9c0553d896e52900ffdc99eeb" kindref="member">itof_cap_err_f</ref></type>
          <declname>cb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>register error callback function. It&apos;s invoked when some error occurs during the capturing process.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] dmcam device handler </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] callback function in following format: void (<emphasis>itof_cap_err_f)(<ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref></emphasis>, int errno); </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="733" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1a6dae2856d85b8c9c0a5d422e74bbfd9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool itof_cap_snapshot</definition>
        <argsstring>(itof_dev_t *dev, uint8_t *frame_data, uint32_t frame_dlen, itof_frame_t *frame)</argsstring>
        <name>itof_cap_snapshot</name>
        <param>
          <type><ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>frame_data</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>frame_dlen</declname>
        </param>
        <param>
          <type><ref refid="structdmcam__frame__t" kindref="compound">itof_frame_t</ref> *</type>
          <declname>frame</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Take a snapshot and fill frame data into specified frame. If the device is capturing, the snapshot will return the latest image{} or it&apos;ll auto start/snapshot/stop</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] dmcam device handler </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frame_data</parametername>
</parameternamelist>
<parameterdescription>
<para>[out] frame data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frame_dlen</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] frame buffersize should be large enough to containing one frame. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frame</parametername>
</parameternamelist>
<parameterdescription>
<para>[out] frame_t filled during snapshot. it can be null </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool return true = ok </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="748" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1aff920045679fbf522c89bfb9e57e67d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool itof_cap_is_ongoing</definition>
        <argsstring>(itof_dev_t *dev)</argsstring>
        <name>itof_cap_is_ongoing</name>
        <param>
          <type><ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check whether the device is in capturing state.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] dmcam device handler</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool [out] true = device in capturing state </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="757" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1a9cf5df46c457249084919038ac0d7d8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool itof_cap_start</definition>
        <argsstring>(itof_dev_t *dev)</argsstring>
        <name>itof_cap_start</name>
        <param>
          <type><ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>start device capturing.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] dmcam device handler</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool return true = ok </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="767" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1a77745ba3b0b299e7b25541f938410cf9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool itof_cap_stop</definition>
        <argsstring>(itof_dev_t *dev)</argsstring>
        <name>itof_cap_stop</name>
        <param>
          <type><ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>stop device capturing.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] dmcam device handler</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool return true = ok </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="777" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1ace83386899d334d63bd44e9f53bff181" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int itof_cap_get_frames</definition>
        <argsstring>(itof_dev_t *dev, uint32_t frame_num, uint8_t *frame_data, uint32_t frame_dlen, itof_frame_t *first_frame_info)</argsstring>
        <name>itof_cap_get_frames</name>
        <param>
          <type><ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>frame_num</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>frame_data</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>frame_dlen</declname>
        </param>
        <param>
          <type><ref refid="structdmcam__frame__t" kindref="compound">itof_frame_t</ref> *</type>
          <declname>first_frame_info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get specified number of frames into specified user buffer. This function may be blocking wait on the frame stream. if enough frames data are collected or any error happends, it&apos;ll returns. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] dmcam device handler </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frame_num</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] number of frames to be captured. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frame_data</parametername>
</parameternamelist>
<parameterdescription>
<para>[out] frame data filled curing capturing. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frame_dlen</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] frame_data buffer size in bytes. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>first_frame_info</parametername>
</parameternamelist>
<parameterdescription>
<para>[out] first frame attributes. It can be NULL</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int [out] return the number for ready frames collected. On error the errono is returned. (errno &lt; 0) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="796" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1a3a9007d1414099ae67fb8e976abdeabe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int itof_cap_get_frame</definition>
        <argsstring>(itof_dev_t *dev, uint8_t *frame_data, uint32_t frame_dlen, itof_frame_t *frame_info)</argsstring>
        <name>itof_cap_get_frame</name>
        <param>
          <type><ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>frame_data</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>frame_dlen</declname>
        </param>
        <param>
          <type><ref refid="structdmcam__frame__t" kindref="compound">itof_frame_t</ref> *</type>
          <declname>frame_info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get one frame into specified buffer. this function is non-blocking, if no frame is ready, it returns 0</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] dmcam device handler </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frame_data</parametername>
</parameternamelist>
<parameterdescription>
<para>[out] frame data to be filled, it can be NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frame_info</parametername>
</parameternamelist>
<parameterdescription>
<para>[out] frame attributes. It can be NULL</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int return 0 if not frame is ready, else return 1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="809" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1aa30cef39b8590d45757c51c35cc0c823" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int itof_cap_save_frame</definition>
        <argsstring>(itof_dev_t *dev, const uint8_t *frame_data, uint32_t frame_dlen, const itof_frame_info_t *frame_info)</argsstring>
        <name>itof_cap_save_frame</name>
        <param>
          <type><ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>frame_data</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>frame_dlen</declname>
        </param>
        <param>
          <type>const <ref refid="structdmcam__frame__info__t" kindref="compound">itof_frame_info_t</ref> *</type>
          <declname>frame_info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>save specified raw frame data into replay file. This function is only functional when en_save_replay and en_save_manually in <ref refid="structdmcam__cap__cfg__t" kindref="compound">itof_cap_cfg_t</ref> is set to true.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] dmcam device handler </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frame_data</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] raw frame data to be saved. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frame_dlen</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] raw frame data len </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frame_info</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] frame info of the raw frame data</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int return 0 if saving is ok, else return negative number </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="826" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1ab2d04b430386b192a00be56caadc2007" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int itof_cap_seek_frame</definition>
        <argsstring>(itof_dev_t *dev, int frame_cnt_offset, int whence)</argsstring>
        <name>itof_cap_seek_frame</name>
        <param>
          <type><ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>int</type>
          <declname>frame_cnt_offset</declname>
        </param>
        <param>
          <type>int</type>
          <declname>whence</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>seek frame inside replay device. it only has effect on replay file simulated dmcam device. it&apos;ll return -1 if dev is not a replay device.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] dmcam device handler </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frame_cnt_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] specified frames to seek afterward or forward. negative value = seek forward </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>whence</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] SEEK_SET: beginning of the replay. SEEK_CUR: current frame of the replay. SEEK_END: end of the replay.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int return the current frame pos (0 = at the beginning, 1 = at the end of first frame). -1 = failed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="849" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1a51f5965814b35fa4f3070b640162f511" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int itof_firmware_upgrade</definition>
        <argsstring>(itof_dev_t *dev, uint8_t type, uint16_t version, const char *file_name)</argsstring>
        <name>itof_firmware_upgrade</name>
        <param>
          <type><ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>type</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>version</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Firmware upgrade for different type target.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev[in]:dmcam</parametername>
</parameternamelist>
<parameterdescription>
<para>device handler </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type[in]:firmware</parametername>
</parameternamelist>
<parameterdescription>
<para>type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>version[in]:firmware</parametername>
</parameternamelist>
<parameterdescription>
<para>version </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file_name[in]:firmware</parametername>
</parameternamelist>
<parameterdescription>
<para>name</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="861" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1a27288b6edf8ea62b411c109dd79a01cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int itof_data_download</definition>
        <argsstring>(itof_dev_t *dev, char *name, uint8_t type, uint16_t version, uint32_t addr)</argsstring>
        <name>itof_data_download</name>
        <param>
          <type><ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>type</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>version</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="863" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1a1aca510d682fd3b67f0d68086e5e9e8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int itof_data_upload</definition>
        <argsstring>(itof_dev_t *dev, uint8_t type, const char *file_name)</argsstring>
        <name>itof_data_upload</name>
        <param>
          <type><ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="864" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1a254938f5c548e56c6fab6c043fca0ede" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int itof_frame_get_distance</definition>
        <argsstring>(itof_dev_t *dev, float *dst, int dst_len, uint8_t *src, int src_len, const itof_frame_info_t *finfo)</argsstring>
        <name>itof_frame_get_distance</name>
        <param>
          <type><ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dst_len</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int</type>
          <declname>src_len</declname>
        </param>
        <param>
          <type>const <ref refid="structdmcam__frame__info__t" kindref="compound">itof_frame_info_t</ref> *</type>
          <declname>finfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>alias for itof_frame_get_dist_f32 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="870" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1a69df5018e1eab3ee46a409bf8bf992c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int itof_frame_get_dist_raw</definition>
        <argsstring>(itof_dev_t *dev, uint16_t *dst, int dst_len, uint8_t *src, int src_len, const itof_frame_info_t *finfo)</argsstring>
        <name>itof_frame_get_dist_raw</name>
        <param>
          <type><ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dst_len</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int</type>
          <declname>src_len</declname>
        </param>
        <param>
          <type>const <ref refid="structdmcam__frame__info__t" kindref="compound">itof_frame_info_t</ref> *</type>
          <declname>finfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>convert to raw distance data in uint16 from raw frame data. the raw distance is calculated without any calibration and pixel reorder.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] specified dmcam device </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>[out] distance buffer. The unit of distance is in millimeter (uint16) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst_len</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] distance buffer length in number of uint16 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] raw frame data buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src_len</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] raw frame data length in byte </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>finfo</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] raw frame information</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int [out] return the number for distance points in dst </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="891" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1a400ff437a3fdab7dd4261c295957c521" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int itof_frame_get_dist_f32</definition>
        <argsstring>(itof_dev_t *dev, float *dst, int dst_len, uint8_t *src, int src_len, const itof_frame_info_t *finfo)</argsstring>
        <name>itof_frame_get_dist_f32</name>
        <param>
          <type><ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dst_len</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int</type>
          <declname>src_len</declname>
        </param>
        <param>
          <type>const <ref refid="structdmcam__frame__info__t" kindref="compound">itof_frame_info_t</ref> *</type>
          <declname>finfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>convert to distance data to float32 from raw frame data.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] specified dmcam device </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>[out] distance buffer. The unit of distance is in meters (float32) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst_len</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] distance buffer length in number of float </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] raw frame data buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src_len</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] raw frame data length in byte </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>finfo</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] raw frame information</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int [out] return the number for distance points in dst </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="908" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1a5904f93833a6b1fa6e159e8d6546a5d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int itof_frame_get_dist_u16</definition>
        <argsstring>(itof_dev_t *dev, uint16_t *dst, int dst_len, uint8_t *src, int src_len, const itof_frame_info_t *finfo)</argsstring>
        <name>itof_frame_get_dist_u16</name>
        <param>
          <type><ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dst_len</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int</type>
          <declname>src_len</declname>
        </param>
        <param>
          <type>const <ref refid="structdmcam__frame__info__t" kindref="compound">itof_frame_info_t</ref> *</type>
          <declname>finfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>convert to distance data in uint16 from raw frame data.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] specified dmcam device </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>[out] distance buffer. The unit of distance is in millimeter (uint16) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst_len</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] distance buffer length in number of uint16 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] raw frame data buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src_len</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] raw frame data length in byte </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>finfo</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] raw frame information</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int [out] return the number for distance points in dst </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="927" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1aa20fc909c478be490fff511be768039f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int itof_frame_get_gray</definition>
        <argsstring>(itof_dev_t *dev, float *dst, int dst_len, uint8_t *src, int src_len, const itof_frame_info_t *finfo)</argsstring>
        <name>itof_frame_get_gray</name>
        <param>
          <type><ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dst_len</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int</type>
          <declname>src_len</declname>
        </param>
        <param>
          <type>const <ref refid="structdmcam__frame__info__t" kindref="compound">itof_frame_info_t</ref> *</type>
          <declname>finfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>alias for itof_frame_get_gray_f32 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="931" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1a9025d5a4071ef00798b478099dc77ff3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int itof_frame_get_gray_f32</definition>
        <argsstring>(itof_dev_t *dev, float *dst, int dst_len, uint8_t *src, int src_len, const itof_frame_info_t *finfo)</argsstring>
        <name>itof_frame_get_gray_f32</name>
        <param>
          <type><ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dst_len</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int</type>
          <declname>src_len</declname>
        </param>
        <param>
          <type>const <ref refid="structdmcam__frame__info__t" kindref="compound">itof_frame_info_t</ref> *</type>
          <declname>finfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get gray data in float32 from raw frame data.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] specified dmcam device </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>[out] gray buffer. The gray value denotes the amplitude. (float32 in [0, 2048.0) ) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst_len</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] distance buffer length in number of float </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] raw frame data buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src_len</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] raw frame data length in byte </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>finfo</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] raw frame information</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int [out] return the number for gray points in dst </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="948" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1ad5c459379fcc872c6685dd8873b9ed2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int itof_frame_get_gray_u16</definition>
        <argsstring>(itof_dev_t *dev, uint16_t *dst, int dst_len, uint8_t *src, int src_len, const itof_frame_info_t *finfo)</argsstring>
        <name>itof_frame_get_gray_u16</name>
        <param>
          <type><ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dst_len</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int</type>
          <declname>src_len</declname>
        </param>
        <param>
          <type>const <ref refid="structdmcam__frame__info__t" kindref="compound">itof_frame_info_t</ref> *</type>
          <declname>finfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get gray data in uint16_t from raw frame data.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] specified dmcam device </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>[out] gray buffer. The gray value denotes the amplitude. (uint16_t in [0, 2048)) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst_len</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] distance buffer length in number of uint16_t </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] raw frame data buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src_len</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] raw frame data length in byte </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>finfo</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] raw frame information</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int [out] return the number for gray points in dst </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="965" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1a0c938a718352b7b791b2826d4aaa8692" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int itof_frame_get_pcl</definition>
        <argsstring>(itof_dev_t *dev, float *pcl, int pcl_len, const float *dist, int dist_len, int img_w, int img_h, const dmcam_camera_para_t *p_cam_param)</argsstring>
        <name>itof_frame_get_pcl</name>
        <param>
          <type><ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>pcl</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pcl_len</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>dist</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dist_len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>img_w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>img_h</declname>
        </param>
        <param>
          <type>const <ref refid="structdmcam__camera__para__t" kindref="compound">dmcam_camera_para_t</ref> *</type>
          <declname>p_cam_param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get point cloud data from distance data. The distance data is usually calcuated using itof_frame_get_dist_f32.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] specified dmcam device </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pcl</parametername>
</parameternamelist>
<parameterdescription>
<para>[out] point clound buffer. each 3 element consists a (x,y,z) point, output is in (w,h,3) dimension and in meter unit. point in value (0,0,0) is invalid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pcl_len</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] point cloud float element count </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dist</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] distance image data buffer. The unit of distance is meter (float) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dist_len</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] distance image data count (in sizeof(float)) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>img_w</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] distance image width in pixel </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>img_h</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] distance image height in pixel </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_cam_param</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] user specified camera lens parameter. if null, the internal camera parameter is used.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int [out] return number of points in point cloud buffer. Note: n points means 3*n floats. N should be img_w * img_h </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="992" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1a7a716664d7e88db1e4c7ab49d0bd098d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int itof_frame_get_pcl_xyzd</definition>
        <argsstring>(itof_dev_t *dev, float *pcl, int pcl_len, const float *dist, int dist_len, int img_w, int img_h, bool pseudo_color, const dmcam_camera_para_t *p_cam_param)</argsstring>
        <name>itof_frame_get_pcl_xyzd</name>
        <param>
          <type><ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>pcl</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pcl_len</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>dist</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dist_len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>img_w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>img_h</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>pseudo_color</declname>
        </param>
        <param>
          <type>const <ref refid="structdmcam__camera__para__t" kindref="compound">dmcam_camera_para_t</ref> *</type>
          <declname>p_cam_param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get point cloud data from distance data. The distance data is usually calcuated using itof_frame_get_dist_f32.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] specified dmcam device </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pcl</parametername>
</parameternamelist>
<parameterdescription>
<para>[out] point clound buffer. each 4 element consists a (x,y,z,d) point. (x,y,z) is coordinate in meter unit, d is distance in meter unit or pseudo-color. output is in (w,h,4) dimension. point in value (0,0,0) is invalid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pcl_len</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] point cloud float element count </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dist</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] distance image data buffer. The unit of distance is meter (float) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dist_len</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] distance image data count (in sizeof(float)) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>img_w</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] distance image width in pixel </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>img_h</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] distance image height in pixel </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pseudo_color</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] if true, d is pseudo uint32 rgb color value (can be retrieve by (uint32)pcl[4*i + 3]); if false, d is the distance in meter </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_cam_param</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] user specified camera lens parameter. if null, the internal camera parameter is used.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int [out] return number of points in point cloud buffer. Note: n points means 4*n floats. N should be img_w * img_h </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="1024" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1ae483c9b218260c2849fdbddf397236f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int itof_frame_get_pcl_xyzi</definition>
        <argsstring>(itof_dev_t *dev, float *pcl, int pcl_len, const float *dist, int dist_len, const float *gray, int gray_len, int img_w, int img_h, int16_t ir_balance, const dmcam_camera_para_t *p_cam_param)</argsstring>
        <name>itof_frame_get_pcl_xyzi</name>
        <param>
          <type><ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>pcl</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pcl_len</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>dist</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dist_len</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>gray</declname>
        </param>
        <param>
          <type>int</type>
          <declname>gray_len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>img_w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>img_h</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>ir_balance</declname>
        </param>
        <param>
          <type>const <ref refid="structdmcam__camera__para__t" kindref="compound">dmcam_camera_para_t</ref> *</type>
          <declname>p_cam_param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get point cloud data from distance data and gray(confid) data<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] specified dmcam device </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pcl</parametername>
</parameternamelist>
<parameterdescription>
<para>[out] point clound buffer. each 4 element consists a (x,y,z,i) point. (x,y,z) is coordinate in meter unit, IR value can be get from i by ((uint32_t)i) 0xff . output is in (w,h,4) dimension. point with (x,y,z)=(0,0,0) is invalid</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pcl_len</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] point cloud float element count </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dist</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] distance image data buffer. The unit of distance is meter (float) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dist_len</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] distance image data count (in sizeof(float)) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gray</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] gray image data buffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gray_len</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] gray image data count (in sizeof(float)) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>img_w</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] distance image width in pixel </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>img_h</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] distance image height in pixel </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ir_balance</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] [-1024, 1024] -&gt; [darkest, brightest] </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_cam_param</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] user specified camera lens parameter. if null, the internal camera parameter is used.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int [out] return number of points in point cloud buffer. Note: n points means 4*n floats. N should be img_w * img_h </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="1055" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1a5274bfb4e28093c3d58ee361f0f89bce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int itof_filter_enable</definition>
        <argsstring>(itof_dev_t *dev, itof_filter_id_e filter_id, itof_filter_args_u *filter_arg, uint32_t reserved)</argsstring>
        <name>itof_filter_enable</name>
        <param>
          <type><ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fb" kindref="member">itof_filter_id_e</ref></type>
          <declname>filter_id</declname>
        </param>
        <param>
          <type><ref refid="uniondmcam__filter__args__u" kindref="compound">itof_filter_args_u</ref> *</type>
          <declname>filter_arg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>reserved</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable filter controller setting for raw data processing</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] dmcam device handler </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filter_id</parametername>
</parameternamelist>
<parameterdescription>
<para>[in]:defined in itof_filter_id_e to identify the filter </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filter_arg</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] filter control args </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reserved</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] reserved for future use. User should set to 0 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int 0 = OK, otherwise failed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="1130" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1add8477d44943b64c016e948a4a1c73f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int itof_filter_disable</definition>
        <argsstring>(itof_dev_t *dev, itof_filter_id_e filter_id)</argsstring>
        <name>itof_filter_disable</name>
        <param>
          <type><ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fb" kindref="member">itof_filter_id_e</ref></type>
          <declname>filter_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Disable filter controller setting for raw data processing</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] dmcam device handler </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filter_id</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] defined in itof_filter_id_e to identify the filter</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int 0 = OK, otherwise failed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="1141" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1a5955f132304782e03f9162e0e4e78ab0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool itof_cmap_palette_set</definition>
        <argsstring>(itof_cmap_palette_e cm)</argsstring>
        <name>itof_cmap_palette_set</name>
        <param>
          <type>itof_cmap_palette_e</type>
          <declname>cm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>set default color palette used inside itof_cmap_ apis.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cm</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] color palette</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool true = set is ok. false = set failed </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="1237" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1a818b2656621893d7c657eb33bc9fd799" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>itof_cmap_palette_e</type>
        <definition>itof_cmap_palette_e itof_cmap_palette_get</definition>
        <argsstring>(void)</argsstring>
        <name>itof_cmap_palette_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get default color palette currently used.</para><para><simplesect kind="return"><para>itof_cmap_palette_e current color palette </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="1244" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1acd8278a4ba7590e78db3f429a2e79ecd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int itof_cmap_dist_f32_to_RGB</definition>
        <argsstring>(uint8_t *dst, int dst_len, const float *src, int src_len, itof_cmap_outfmt_e outfmt, float range_min_m, float range_max_m, const itof_cmap_cfg_t *cfg)</argsstring>
        <name>itof_cmap_dist_f32_to_RGB</name>
        <param>
          <type>uint8_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dst_len</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int</type>
          <declname>src_len</declname>
        </param>
        <param>
          <type><ref refid="dmcam_8h_1a7574db3b1665244ce8a46f8839ce49d2" kindref="member">itof_cmap_outfmt_e</ref></type>
          <declname>outfmt</declname>
        </param>
        <param>
          <type>float</type>
          <declname>range_min_m</declname>
        </param>
        <param>
          <type>float</type>
          <declname>range_max_m</declname>
        </param>
        <param>
          <type>const <ref refid="structdmcam__cmap__cfg" kindref="compound">itof_cmap_cfg_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>convert dist_f32 image (pixel in meter) to pesudo-RGB points with specified pixel format</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>[out] pseudo-RGB point buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst_len</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] point buffer size in bytes </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] float points buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src_len</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] count of float points </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outfmt</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] pixel format of the pseudo-RGB </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>range_min_m</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] minimum range of source point </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>range_max_m</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] max range of source point </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] refer itof_cmap_cfg_t. if NULL, default config is used.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int [out] the count of pseudo RGB points </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="1262" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1a7a61e6254ffd4a83abc422f223ab9b2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int itof_cmap_dist_u16_to_RGB</definition>
        <argsstring>(uint8_t *dst, int dst_len, const uint16_t *src, int src_len, itof_cmap_outfmt_e outfmt, uint16_t range_min_mm, uint16_t range_max_mm, const itof_cmap_cfg_t *cfg)</argsstring>
        <name>itof_cmap_dist_u16_to_RGB</name>
        <param>
          <type>uint8_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dst_len</declname>
        </param>
        <param>
          <type>const uint16_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int</type>
          <declname>src_len</declname>
        </param>
        <param>
          <type><ref refid="dmcam_8h_1a7574db3b1665244ce8a46f8839ce49d2" kindref="member">itof_cmap_outfmt_e</ref></type>
          <declname>outfmt</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>range_min_mm</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>range_max_mm</declname>
        </param>
        <param>
          <type>const <ref refid="structdmcam__cmap__cfg" kindref="compound">itof_cmap_cfg_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>convert dist_u16 image (pixel in milimeter) to pesudo-RGB points with specified pixel format</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>[out] pseudo-RGB point buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst_len</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] point buffer size in bytes </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] dist_u16 image buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src_len</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] count of u16 points </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outfmt</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] pixel format of the pseudo-RGB </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>range_min_mm</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] minimum range of source point </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>range_max_mm</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] max range of source point </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] refer itof_cmap_cfg_t. if NULL, default config is used.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int [out] the count of pseudo RGB points </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="1281" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1a37319aefddbd3c274f4cff9d0955c594" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int itof_cmap_gray_u16_to_IR</definition>
        <argsstring>(uint8_t *dst, int dst_len, const uint16_t *src, int src_len, int balance)</argsstring>
        <name>itof_cmap_gray_u16_to_IR</name>
        <param>
          <type>uint8_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dst_len</declname>
        </param>
        <param>
          <type>const uint16_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int</type>
          <declname>src_len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>balance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>convert gray_u16 image to IR image whose pixel is in [0~255]</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>[out] IR image buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst_len</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] IR image buffer size in bytes </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] gray_u16 image </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src_len</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] count of u16 points in gray_u16 image </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>balance</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] [-1024, 1024] -&gt; [darkest, brightest]</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int [out] the count of IR image </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="1294" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1ae6185f162f89c73dac79d317ea15e2eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int itof_cmap_gray_f32_to_IR</definition>
        <argsstring>(uint8_t *dst, int dst_len, const float *src, int src_len, int balance)</argsstring>
        <name>itof_cmap_gray_f32_to_IR</name>
        <param>
          <type>uint8_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dst_len</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int</type>
          <declname>src_len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>balance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>convert gray_f32 image to IR image whose pixel is in [0~255]</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>[out] IR image buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst_len</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] IR image buffer size in bytes </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] gray_f32 image </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src_len</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] count of f32 points in gray_f32 image </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>balance</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] [-1024, 1024] -&gt; [darkest, brightest]</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int [out] the count of IR image </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="1307" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1afc31165cb9b0709441990c726198f5b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int itof_file_open</definition>
        <argsstring>(const char *fname, const char *mode)</argsstring>
        <name>itof_file_open</name>
        <param>
          <type>const char *</type>
          <declname>fname</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>open specified file and get file descriptor for itof_frame_save_xxx apis.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fname</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] specified filename</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int [out] file descriptor. &lt; 0 = failed </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="1323" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1a561eb8b4e2257bd6ba378c0cbd0c74ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void itof_file_close</definition>
        <argsstring>(int fd)</argsstring>
        <name>itof_file_close</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>close specified file descriptor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] specified file descriptor </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="1331" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1adb2f0b9ba97da2cb0cef0e3afe58e630" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool itof_frame_save_raw</definition>
        <argsstring>(int fd, itof_frame_save_fmt_t save_fmt, const uint16_t *raw, int raw_len, int img_w, int img_h, int dcs_cnt, const char *raw_tag)</argsstring>
        <name>itof_frame_save_raw</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>itof_frame_save_fmt_t</type>
          <declname>save_fmt</declname>
        </param>
        <param>
          <type>const uint16_t *</type>
          <declname>raw</declname>
        </param>
        <param>
          <type>int</type>
          <declname>raw_len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>img_w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>img_h</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dcs_cnt</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>raw_tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>save specified raw data (in uin16_t) with specified pixcel width and height to file with specified saving format.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] specified file handler </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>save_fmt</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] file saving format defined in itof_frame_save_fmt_t. only followin format is supported: ITOF_FRAME_SAVE_UINT32 ITOF_FRAME_SAVE_UINT16 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>raw</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] raw data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>raw_len</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] number of raw data (in count of uint16_t) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>img_w</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] dist data pixel width </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>img_h</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] dist data pixel height </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dcs_cnt</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] dist data dcs sub-frame count </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>raw_tag</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] any string. if want to used by replay, specify (itof_t*)dev-&gt;product string here. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool [out] true = save raw frame ok, false = fail </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="1362" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1a166ad053e6c9c2c3dd15024ee861bb8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool itof_frame_save_distance</definition>
        <argsstring>(int fd, itof_frame_save_fmt_t save_fmt, const float *dist, int dist_len, int img_w, int img_h)</argsstring>
        <name>itof_frame_save_distance</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>itof_frame_save_fmt_t</type>
          <declname>save_fmt</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>dist</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dist_len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>img_w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>img_h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>save specified distance data (in float32, unit: meter) with specified pixcel width and height to file with specified saving format.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] specified file handler </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>save_fmt</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] file saving format defined in @ itof_frame_save_fmt_t. only followin format is supported: ITOF_FRAME_SAVE_FLOAT32 ITOF_FRAME_SAVE_UINT32 ITOF_FRAME_SAVE_UINT16 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dist</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] distance data (in float32, unit: meter) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dist_len</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] number of distance data (in count of float) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>img_w</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] dist data pixel width </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>img_h</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] dist data pixel height</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool [out] true = save distance frame ok, false = fail </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="1386" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1afab5154e6aaa8f6d436b6e97c80a9e51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool itof_frame_save_gray</definition>
        <argsstring>(int fd, itof_frame_save_fmt_t save_fmt, const float *src, int src_len, int img_w, int img_h)</argsstring>
        <name>itof_frame_save_gray</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>itof_frame_save_fmt_t</type>
          <declname>save_fmt</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int</type>
          <declname>src_len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>img_w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>img_h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>save specified gray data (in float32) with specified pixcel width and height to file with specified saving format.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] specified file handler </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>save_fmt</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] file saving format defined in itof_frame_save_fmt_t. only followin format is supported: ITOF_FRAME_SAVE_UINT16 ITOF_FRAME_SAVE_UINT8 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] gray data (in float32) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src_len</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] number of distance data (in count of float) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>img_w</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] dist data pixel width </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>img_h</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] dist data pixel height</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool [out] true = save distance frame ok, false = fail </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="1408" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1a8aff3beeaa724043c1861e8b6f30cede" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int itof_frame_load_raw</definition>
        <argsstring>(int fd, uint16_t *dst, int dst_len, int *dst_w, int *dst_h, int *dst_dcsn, char *dst_tag, int dst_tag_len)</argsstring>
        <name>itof_frame_load_raw</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dst_len</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dst_w</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dst_h</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dst_dcsn</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>dst_tag</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dst_tag_len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>load one raw frame from specified file fd.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] specified data file fd. The fd related file is always saved by <ref refid="dmcam_8h_1adb2f0b9ba97da2cb0cef0e3afe58e630" kindref="member">itof_frame_save_raw</ref> api </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>[out] raw </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst_len</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] dst buffer length (in count of sizeof(uint16_t)) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst_w</parametername>
</parameternamelist>
<parameterdescription>
<para>[out] raw frame pixel width </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst_h</parametername>
</parameternamelist>
<parameterdescription>
<para>[out] raw frame pixel height </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst_dcsn</parametername>
</parameternamelist>
<parameterdescription>
<para>[out] raw dcs cnt per frame </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst_tag</parametername>
</parameternamelist>
<parameterdescription>
<para>[out] raw data tag string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tag_len</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] raw data tag buffer size</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int [out] length of loaded raw data (in count of sizeof(uint16)) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="1427" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1aff19ee2a211c9121508ffaa69355a457" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int itof_frame_load_distance</definition>
        <argsstring>(int fd, float *dst, int dst_len, int *dst_w, int *dst_h)</argsstring>
        <name>itof_frame_load_distance</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dst_len</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dst_w</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dst_h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>load one distance frame from specified file fd.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] specified data file fd. The fd related file is always saved by <ref refid="dmcam_8h_1a166ad053e6c9c2c3dd15024ee861bb8c" kindref="member">itof_frame_save_distance</ref> api </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>[out] distance in float (unit: meter) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst_len</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] dst buffer length (in count of sizeof(float)) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst_w</parametername>
</parameternamelist>
<parameterdescription>
<para>[out] distance frame pixel width </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst_h</parametername>
</parameternamelist>
<parameterdescription>
<para>[out] distance frame pixel height</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int [out] length of loaded distance data (in count of sizeof(float)) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="1445" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1a8f2ad8fa16497bc890e4308d936425d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int itof_frame_load_gray</definition>
        <argsstring>(int fd, float *dst, int dst_len, int *dst_w, int *dst_h)</argsstring>
        <name>itof_frame_load_gray</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dst_len</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dst_w</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dst_h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>load one gray frame from specified file fd.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] specified data file fd. The fd related file is always saved by <ref refid="dmcam_8h_1afab5154e6aaa8f6d436b6e97c80a9e51" kindref="member">itof_frame_save_gray</ref> api </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>[out] gray in float (unit: meter) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst_len</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] dst buffer length (in count of sizeof(float)) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst_w</parametername>
</parameternamelist>
<parameterdescription>
<para>[out] gray frame pixel width </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst_h</parametername>
</parameternamelist>
<parameterdescription>
<para>[out] gray frame pixel height</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int [out] length of loaded gray data (in count of sizeof(float)) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="1463" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dmcam_8h_1a88cc1dd0bdf01fad346debf786bf4ee0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool dmcam_get_lens_param</definition>
        <argsstring>(itof_dev_t *dev, dmcam_camera_para_t *param, uint8_t id)</argsstring>
        <name>dmcam_get_lens_param</name>
        <param>
          <type><ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="structdmcam__camera__para__t" kindref="compound">dmcam_camera_para_t</ref> *</type>
          <declname>param</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get lens calibration data from calibration data</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev[in]device</parametername>
</parameternamelist>
<parameterdescription>
<para>handler </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
</parameternamelist>
<parameterdescription>
<para>param </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>[int]id</parametername>
<parametername>defualt</parametername>
</parameternamelist>
<parameterdescription>
<para>use 0</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool[out] true=ok, false=failed </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h" line="1474" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>DM&apos;s camera device API. </para>    </briefdescription>
    <detaileddescription>
<para>Detail Decsription starts here </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*****************************************************************/</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor">#ifndef<sp/>ITOF_H</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ITOF_H</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__API<sp/>__declspec(dllexport)</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_MSC_VER<sp/>&gt;=<sp/>1800</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>false<sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>true<sp/><sp/><sp/><sp/>1</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>bool<sp/>uint8_t</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/></highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IT_NAME<sp/>&quot;DMCAM&quot;</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>IT_VERSION_MAJOR<sp/>1</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>IT_VERSION_MINOR<sp/>80</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>IT_VERSION_REV<sp/><sp/><sp/>5</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>IT_VERSION_STR<sp/>&quot;v1.80.5&quot;</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ITOF_ERR_CAP_FRAME_DISCARD<sp/>(3)</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ITOF_ERR_CAP_WRONG_STATE<sp/>(-2)</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ITOF_ERR_CAP_CANCEL<sp/>(-3)</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ITOF_ERR_CAP_TIMEOUT<sp/>(-5)</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ITOF_ERR_CAP_STALL<sp/><sp/><sp/>(-7)</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ITOF_ERR_CAP_ERROR<sp/><sp/><sp/>(-8)</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ITOF_ERR_CAP_EOF<sp/><sp/><sp/>(-9)<sp/>//<sp/>cap<sp/>replay<sp/>related<sp/>error</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ITOF_ERR_CAP_UNKNOWN<sp/><sp/>(-10)</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IT_SEEK_SET<sp/>0</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>IT_SEEK_CUR<sp/>1</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>IT_SEEK_END<sp/>2</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__GNUC__<sp/>&gt;<sp/>4<sp/>||<sp/>(__GNUC__<sp/>==<sp/>4<sp/>&amp;&amp;<sp/>__GNUC_MINOR__<sp/>&gt;=<sp/>5)</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>API_DEPRECATED_FOR(f)<sp/>\</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__attribute__((deprecated(&quot;Use<sp/>&quot;<sp/>#f<sp/>&quot;<sp/>instead&quot;)))</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>API_DEPRECATED<sp/>\</highlight></codeline>
<codeline lineno="68"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__attribute__((deprecated(&quot;This<sp/>API<sp/>is<sp/>deprecated<sp/>and<sp/>will<sp/>be<sp/>remove<sp/>in<sp/>the<sp/>furture<sp/>release&quot;)))</highlight></codeline>
<codeline lineno="69"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="70"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>API_DEPRECATED_FOR(f)</highlight></codeline>
<codeline lineno="71"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>API_DEPRECATED</highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__GNUC__<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="75" refid="dmcam_8h_1a89e2a87368200f4f23d20c9703c81e84" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>DEV_IF_USB<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>DEV_IF_ETH,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>DEV_IF_FILE,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>DEV_IF_NONE<sp/>=<sp/>99,</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}<ref refid="dmcam_8h_1a89e2a87368200f4f23d20c9703c81e84" kindref="member">itof_dev_if_e</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="structdmcam__dev__if__info__usb" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdmcam__dev__if__info__usb" kindref="compound">itof_dev_if_info_usb</ref><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>usb_bus_num;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>usb_port_num;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>usb_dev_addr;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>usb_speed;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">};</highlight></codeline>
<codeline lineno="89" refid="structdmcam__dev__if__info__eth" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdmcam__dev__if__info__eth" kindref="compound">itof_dev_if_info_eth</ref><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>addr[16];</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>reserved[16];</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>token;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>cid;</highlight></codeline>
<codeline lineno="94"><highlight class="normal">};</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="structdmcam__dev__if__info__fil" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdmcam__dev__if__info__fil" kindref="compound">itof_dev_if_info_fil</ref><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*fd;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fname;</highlight></codeline>
<codeline lineno="99"><highlight class="normal">};</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="structdmcam__dev__if__info__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a89e2a87368200f4f23d20c9703c81e84" kindref="member">itof_dev_if_e</ref><sp/>type;<sp/></highlight><highlight class="comment">//<sp/>interface<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdmcam__dev__if__info__usb" kindref="compound">itof_dev_if_info_usb</ref><sp/>usb;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdmcam__dev__if__info__eth" kindref="compound">itof_dev_if_info_eth</ref><sp/>eth;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdmcam__dev__if__info__fil" kindref="compound">itof_dev_if_info_fil</ref><sp/>fil;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>info;</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}<ref refid="structdmcam__dev__if__info__t" kindref="compound">itof_dev_if_info_t</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="uniondmcam__dev__ver__u" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>version[4];</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>hw_ver;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>sw_ver;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>sw2_ver;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>hw2_ver;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}ver;</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}<ref refid="uniondmcam__dev__ver__u" kindref="compound">itof_dev_ver_u</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="structdmcam__dev__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handler;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdmcam__dev__if__info__t" kindref="compound">itof_dev_if_info_t</ref><sp/>if_info;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>device<sp/>info<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>product[32];</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>vendor[32];</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>serial[32];</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="structdmcam__dev__t_1a17422d5663815019f706abbc960c4a89" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="structdmcam__dev__t_1a17422d5663815019f706abbc960c4a89" kindref="member">dev_id</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="uniondmcam__dev__ver__u" kindref="compound">itof_dev_ver_u</ref><sp/>version;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>internal<sp/>used<sp/>vars<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="structdmcam__dev__t_1ac6add4d53e53b0d2a81df537e60c600e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structdmcam__dev__t_1ac6add4d53e53b0d2a81df537e60c600e" kindref="member">expath</ref>;<sp/></highlight></codeline>
<codeline lineno="140" refid="structdmcam__dev__t_1a74516d03f08d1c30ecc8a7e17cd723d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structdmcam__dev__t_1a74516d03f08d1c30ecc8a7e17cd723d3" kindref="member">lock</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="142" refid="structdmcam__dev__t_1a6191940e22477598a5d42088f25ca288" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structdmcam__dev__t_1a6191940e22477598a5d42088f25ca288" kindref="member">user_data0</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="143" refid="structdmcam__dev__t_1a8c908321d7ee526e489dbe698ee821cc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structdmcam__dev__t_1a8c908321d7ee526e489dbe698ee821cc" kindref="member">user_data1</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="144" refid="structdmcam__dev__t_1a1457a89e366cc1df3414ba8590aab272" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structdmcam__dev__t_1a1457a89e366cc1df3414ba8590aab272" kindref="member">init_flag</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="145" refid="structdmcam__dev__t_1ae1c5fcb29c0f81ad590627668d9a8059" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structdmcam__dev__t_1ae1c5fcb29c0f81ad590627668d9a8059" kindref="member">alloc_flag</ref>;<sp/></highlight></codeline>
<codeline lineno="146" refid="structdmcam__dev__t_1a89410452d83cad02f822eb800ca3b7c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structdmcam__dev__t_1a89410452d83cad02f822eb800ca3b7c2" kindref="member">api_flag</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal">}<ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref>;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="structdmcam__camera__para__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="153" refid="structdmcam__camera__para__t_1af80cf736d357505225b267ac49fc6e6e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structdmcam__camera__para__t_1af80cf736d357505225b267ac49fc6e6e" kindref="member">cx</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="154" refid="structdmcam__camera__para__t_1a5b1fa4ade7ddbdd91f007ada0e65f74b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structdmcam__camera__para__t_1a5b1fa4ade7ddbdd91f007ada0e65f74b" kindref="member">cy</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="155" refid="structdmcam__camera__para__t_1a7455ab0094e7ba246e522f866133d9aa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structdmcam__camera__para__t_1a7455ab0094e7ba246e522f866133d9aa" kindref="member">fx</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="156" refid="structdmcam__camera__para__t_1a73404e46ebda15f3e949c725bf73eca8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structdmcam__camera__para__t_1a73404e46ebda15f3e949c725bf73eca8" kindref="member">fy</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="158" refid="structdmcam__camera__para__t_1a7aca480eed64bacd1157ec89c585abc0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dcoeff[5];<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="159"><highlight class="normal">}<ref refid="structdmcam__camera__para__t" kindref="compound">dmcam_camera_para_t</ref>;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="dmcam_8h_1aec561b7d4a2678a8002879106a04fa17" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG_LEVEL_TRACE<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG_LEVEL_DEBUG,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG_LEVEL_INFO,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG_LEVEL_WARN,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG_LEVEL_ERROR,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG_LEVEL_NONE,</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}<ref refid="dmcam_8h_1aec561b7d4a2678a8002879106a04fa17" kindref="member">itof_log_level_e</ref>;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>DEV_RST_DEV<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>DEV_RST_CAM0<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>DEV_RST_CAM1<sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>DEV_RST_USB<sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>DEV_RST_IR1<sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>DEV_RST_IR2<sp/>=<sp/>5,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>DEV_RST_MCU<sp/>=<sp/>8,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-----</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>DEV_RST_CNT,</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}<sp/>itof_dev_rst_e;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>DEV_MODE_NORMAL<sp/>=<sp/>0,<sp/></highlight><highlight class="comment">//3D<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>DEV_MODE_DFU,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>DEV_MODE_TEST<sp/>=<sp/>8,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>DEV_MODE_DATA_UP,</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}<sp/>itof_dev_mode_e;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>DEV_REG_RESERVED<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>DEV_REG_CAM0<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>DEV_REG_CAM1<sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>DEV_REG_IR_0<sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>DEV_REG_IR_1<sp/>=<sp/>5,</highlight></codeline>
<codeline lineno="198"><highlight class="normal">}itof_dev_reg_e;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aaf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="201" refid="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aafadcea6c1336a55c2797d465b70c6c0eaf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aafadcea6c1336a55c2797d465b70c6c0eaf" kindref="member">FRAME_FMT_DCSx1</ref><sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="202" refid="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aafa82c660bcd4fa45880e18975a8892e8a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aafa82c660bcd4fa45880e18975a8892e8a9" kindref="member">FRAME_FMT_DUAL_MGX_SINE_PIDELAY_DCSx2</ref><sp/>=<sp/>1,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="203" refid="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aafa4ad84d71a4a5a53b95c8ff87bab7ff8e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aafa4ad84d71a4a5a53b95c8ff87bab7ff8e" kindref="member">FRAME_FMT_SINGLE_MGX_SINE_PIDELAY_DCSx4</ref><sp/><sp/>=<sp/>2,<sp/></highlight></codeline>
<codeline lineno="204" refid="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aafaeba23929372ecdf8b8bda6f7f727aae6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aafaeba23929372ecdf8b8bda6f7f727aae6" kindref="member">FRAME_FMT_DUAL_MGX_PN_NOPIDELAY_DCSx1</ref><sp/>=<sp/>3,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="205" refid="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aafa4a2276701fe04a28722e16a0ad1ad6fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aafa4a2276701fe04a28722e16a0ad1ad6fe" kindref="member">FRAME_FMT_DUAL_MGX_SINE_NOPIDELAY_DCSx1</ref><sp/>=<sp/>4,<sp/><sp/></highlight></codeline>
<codeline lineno="206" refid="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aafa4689ffd17292091786ebe1e1b44a14a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aafa4689ffd17292091786ebe1e1b44a14a5" kindref="member">FRAME_FMT_SINGLE_MGX_PN_PIDELAY_DCSx4</ref><sp/>=<sp/>5,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="207" refid="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aafa8a7c1186599db26d26c7ac73d48a248b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aafa8a7c1186599db26d26c7ac73d48a248b" kindref="member">FRAME_FMT_DUAL_MGX_PN_PIDELAY_DCSx2</ref><sp/>=<sp/>6,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="208" refid="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aafac5f6bf7b6d4b916486f40ed6e5c646e4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aafac5f6bf7b6d4b916486f40ed6e5c646e4" kindref="member">FRAME_FMT_SINGLE_MGX_PN_NOPIDELAY_DCSx2</ref><sp/>=<sp/>7,<sp/><sp/></highlight></codeline>
<codeline lineno="209" refid="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aafa14e38232a7b669a813665dff1aa2a5ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aafa14e38232a7b669a813665dff1aa2a5ea" kindref="member">FRAME_FMT_SINGLE_MGX_SINE_NOPIDELAY_DCSx2</ref><sp/>=<sp/>8,</highlight></codeline>
<codeline lineno="210" refid="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aafaa9b1c66b6bf0d81612ae0c849c5206be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aafaa9b1c66b6bf0d81612ae0c849c5206be" kindref="member">FRAME_FMT_PHASE</ref><sp/>=<sp/>0x0A,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="211" refid="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aafad8ac1690cf4a67043fbd2992c233bbc6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aafad8ac1690cf4a67043fbd2992c233bbc6" kindref="member">FRAME_FMT_GRAY</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="212" refid="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aafa51d34c6b5f27b3b88ca301fbed28ae38" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aafa51d34c6b5f27b3b88ca301fbed28ae38" kindref="member">FRAME_FMT_LOSSY</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="213" refid="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aafa0d913adac54fc528731c77b0a9390c35" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aafa0d913adac54fc528731c77b0a9390c35" kindref="member">FRAME_FMT_QI</ref><sp/>=<sp/>0x0D,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="214" refid="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aafa4ca8587e008f0d4e279433b4653df00c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aafa4ca8587e008f0d4e279433b4653df00c" kindref="member">FRAME_FMT_QI_DUAL_FREQ</ref><sp/>=<sp/>0x0E,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="215" refid="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aafa7732afde0dee2620b5251b96e1d34387" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aafa7732afde0dee2620b5251b96e1d34387" kindref="member">FRAME_FMT_HDR_8DCS</ref><sp/>=<sp/>0X0F,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="216" refid="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aafa9bf964d91626ab4e2a904e3e7daa8fb2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aafa9bf964d91626ab4e2a904e3e7daa8fb2" kindref="member">FRAME_FMT_QI_SHIFT_LOSSLESS</ref><sp/>=<sp/>0X10,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="217" refid="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aafa7fb235d7b477fa70fa7784e8fdcab84d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aafa7fb235d7b477fa70fa7784e8fdcab84d" kindref="member">FRAME_FMT_QI_SHIFT_LOSSLESS_DUAL_FREQ</ref><sp/>=<sp/>0X11,<sp/></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>FRAME_FMT_CNT,</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}<ref refid="dmcam_8h_1a449da4d6a4140fa834dfdae71ded1aaf" kindref="member">itof_frame_mode_e</ref>;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="222" refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>PARAM_DEV_MODE<sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="224" refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25a61c2db31bf1dfd49844c12c87df7e45a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25a61c2db31bf1dfd49844c12c87df7e45a" kindref="member">PARAM_MOD_FREQ</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="226" refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25a02ed538fba58bfc45b5f0a9f43a16a9f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25a02ed538fba58bfc45b5f0a9f43a16a9f" kindref="member">PARAM_INFO_VENDOR</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="227" refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25a624a16e6b900ce42cf7e1e1a2500c0a6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25a624a16e6b900ce42cf7e1e1a2500c0a6" kindref="member">PARAM_INFO_PRODUCT</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="228" refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25a5ebedfc0309659aa9bbe94c4d68a1558" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25a5ebedfc0309659aa9bbe94c4d68a1558" kindref="member">PARAM_INFO_CAPABILITY</ref>,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="229" refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25af6d44a6b5c2b32ca42331895792eba11" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25af6d44a6b5c2b32ca42331895792eba11" kindref="member">PARAM_INFO_SERIAL</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="230" refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25af2de45b6792cfe201ab6e1bd416124a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25af2de45b6792cfe201ab6e1bd416124a8" kindref="member">PARAM_INFO_VERSION</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="231" refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25a9c2312f91623f51dd9553e32252122b6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25a9c2312f91623f51dd9553e32252122b6" kindref="member">PARAM_INFO_SENSOR</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="233" refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25a8864a5235e1657a70ba68c258abf2487" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25a8864a5235e1657a70ba68c258abf2487" kindref="member">PARAM_INFO_CALIB</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="234" refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25a41ad95e659bee3e7022aeab98502b2d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25a41ad95e659bee3e7022aeab98502b2d5" kindref="member">PARAM_ROI</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="235" refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25ae11156db2a7c041ec06ccc3eb685fabc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25ae11156db2a7c041ec06ccc3eb685fabc" kindref="member">PARAM_FRAME_FORMAT</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="236" refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25afdd90eadb447517f5369d5ed9c8887c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25afdd90eadb447517f5369d5ed9c8887c5" kindref="member">PARAM_ILLUM_POWER</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="237" refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25af527e28a52adf072b237e588a3705130" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25af527e28a52adf072b237e588a3705130" kindref="member">PARAM_FRAME_RATE</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="238" refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25aa0797722cff186a6bc118b42c3886892" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25aa0797722cff186a6bc118b42c3886892" kindref="member">PARAM_INTG_TIME</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="239" refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25aed812fe99d506385053dd6ab116abfcd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25aed812fe99d506385053dd6ab116abfcd" kindref="member">PARAM_PHASE_CORR</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="240" refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25aa881a29d277c20733b4dd62bc9568719" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25aa881a29d277c20733b4dd62bc9568719" kindref="member">PARAM_TEMP</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="241" refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25ad9dfa7c4db94130d522a939f7e8caa36" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25ad9dfa7c4db94130d522a939f7e8caa36" kindref="member">PARAM_HDR_INTG_TIME</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="242" refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25a2c4ccc09ee8dad10a612f47318fdd1a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25a2c4ccc09ee8dad10a612f47318fdd1a4" kindref="member">PARAM_SYNC_DELAY</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="243" refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25acd546e96053888933381245c403feb45" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25acd546e96053888933381245c403feb45" kindref="member">PARAM_SYS_CALIB_COEFF</ref>,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="244" refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25a08fe50322b2190a01d2d3d6d7bc55cff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25a08fe50322b2190a01d2d3d6d7bc55cff" kindref="member">PARAM_SYNC_SYS_TIME</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="245" refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25a9304cd07f34a874003129ad7686d99af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25a9304cd07f34a874003129ad7686d99af" kindref="member">PARAM_AMBIENT_LIGHT_COEFF</ref>,<sp/></highlight></codeline>
<codeline lineno="246" refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25abf882f2713d7467434f830bbf7c29895" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25abf882f2713d7467434f830bbf7c29895" kindref="member">PARAM_DUAL_MOD_FREQ</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="247" refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25a4ecda43a6844938cd47c78c4446728ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25a4ecda43a6844938cd47c78c4446728ed" kindref="member">PARAM_INFO_LENS</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="248" refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25abb748675e4cac7971e83f7f931537850" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25abb748675e4cac7971e83f7f931537850" kindref="member">PARAM_FLIP</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="249" refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25a2a879b4f73e9fdabee6f6e1efcd0144c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25a2a879b4f73e9fdabee6f6e1efcd0144c" kindref="member">PARAM_RESERVED</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="250" refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25af20cd0c82fb757294dcb117ab0168c07" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25af20cd0c82fb757294dcb117ab0168c07" kindref="member">PARAM_INFO_CALIB_FREQ</ref>,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="251" refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25afcb18cb0f42ed6c329f8e2bffdb7c383" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25afcb18cb0f42ed6c329f8e2bffdb7c383" kindref="member">PARAM_DEL_CALIB_DATA</ref>,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>PARAM_ENUM_COUNT,</highlight></codeline>
<codeline lineno="253"><highlight class="normal">}<ref refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25" kindref="member">itof_dev_param_e</ref>;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>BIN_DATA_TYPE_MCU,<sp/></highlight><highlight class="comment">//mcu<sp/>firmware</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>BIN_DATA_TYPE_TFC,<sp/></highlight><highlight class="comment">//TOF<sp/>controller<sp/>IC<sp/>firmware</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>BIN_DATA_TYPE_CALIB,<sp/></highlight><highlight class="comment">//&gt;TOF<sp/>calibration<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal">}itof_bin_data_type_e;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="262" refid="dmcam_8h_1aa30b1b13d86ada87d60d90ea9c2bdf30" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>IT_BINNING_1X1,</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>IT_BINNING_2X2,</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>IT_BINNING_4X4,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>IT_BINNING_8X8,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>IT_BINNING_2X4,</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//---</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>IT_BINNING_CNT,</highlight></codeline>
<codeline lineno="270"><highlight class="normal">}<ref refid="dmcam_8h_1aa30b1b13d86ada87d60d90ea9c2bdf30" kindref="member">itof_binning_mode_e</ref>;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="preprocessor">#pragma<sp/>pack(push)</highlight></codeline>
<codeline lineno="289"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#pragma<sp/>pack(1)</highlight></codeline>
<codeline lineno="290"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="291" refid="structdmcam__param__roi__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="292" refid="structdmcam__param__roi__t_1a295513df3516d7783c992d8b16357277" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structdmcam__param__roi__t_1a295513df3516d7783c992d8b16357277" kindref="member">srow</ref>;<sp/></highlight></codeline>
<codeline lineno="293" refid="structdmcam__param__roi__t_1a25c4365134243d033de095e2932deb5c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structdmcam__param__roi__t_1a25c4365134243d033de095e2932deb5c" kindref="member">erow</ref>;<sp/></highlight></codeline>
<codeline lineno="294" refid="structdmcam__param__roi__t_1a868c9beea6a8f0e7cd36bac3ee8bac4f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structdmcam__param__roi__t_1a868c9beea6a8f0e7cd36bac3ee8bac4f" kindref="member">scol</ref>;<sp/></highlight></codeline>
<codeline lineno="295" refid="structdmcam__param__roi__t_1a8b2ff5df6e7a998e6f4c3167606b0693" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structdmcam__param__roi__t_1a8b2ff5df6e7a998e6f4c3167606b0693" kindref="member">ecol</ref>;<sp/></highlight></codeline>
<codeline lineno="296" refid="structdmcam__param__roi__t_1a4a77ed13cad724bd1166fe0a4483b9f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structdmcam__param__roi__t_1a4a77ed13cad724bd1166fe0a4483b9f1" kindref="member">binning</ref>;<sp/></highlight></codeline>
<codeline lineno="297" refid="structdmcam__param__roi__t_1ae7bc374d9cd1e693d0fb3c501a7aab43" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structdmcam__param__roi__t_1ae7bc374d9cd1e693d0fb3c501a7aab43" kindref="member">max_fsize</ref>;<sp/></highlight></codeline>
<codeline lineno="298"><highlight class="normal">}<ref refid="structdmcam__param__roi__t" kindref="compound">itof_param_roi_t</ref>;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300" refid="structdmcam__cap" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdmcam__cap" kindref="compound">itof_cap</ref><sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>max_frame_width;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>max_frame_height;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>max_frame_depth;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>max_fps;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>max_intg_us;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>illum_board_type;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>sensor_board_type;</highlight></codeline>
<codeline lineno="308"><highlight class="normal">}<sp/><ref refid="structdmcam__cap" kindref="compound">itof_param_cap_t</ref>;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="311" refid="uniondmcam__param__val__u" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>raw[18];<sp/></highlight><highlight class="comment">//<sp/>raw<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>dev_mode;</highlight></codeline>
<codeline lineno="314" refid="uniondmcam__param__val__u_1a68584e6edb987cb54bf440fbfbd201c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="uniondmcam__param__val__u_1a68584e6edb987cb54bf440fbfbd201c3" kindref="member">mod_freq</ref>;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>calib_data_type;</highlight></codeline>
<codeline lineno="316" refid="uniondmcam__param__val__u_1a312014f435f1799881d2359d93cd369a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>info_vendor[18];<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="317" refid="uniondmcam__param__val__u_1a07c69922f1b4b15ed3ef4f3b511edf97" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>info_product[18];<sp/><sp/></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>ambient_light_coeff;</highlight></codeline>
<codeline lineno="319" refid="uniondmcam__param__val__u_1a187b1dd5135d430b2c107fd591596535" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdmcam__cap" kindref="compound">itof_param_cap_t</ref><sp/><ref refid="uniondmcam__param__val__u_1a187b1dd5135d430b2c107fd591596535" kindref="member">info_capability</ref>;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="321" refid="uniondmcam__param__val__u_1a1e64a6b3efdbe6fda164829f41bf7b6c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>serial[3];<sp/></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>info_serial;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="324" refid="uniondmcam__param__val__u_1ad96fc862ce4146f8e4e89eb1e23d8832" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="uniondmcam__param__val__u_1ad96fc862ce4146f8e4e89eb1e23d8832" kindref="member">hw_ver</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="325" refid="uniondmcam__param__val__u_1aace043054f54e9da38a5383b63700f9d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="uniondmcam__param__val__u_1aace043054f54e9da38a5383b63700f9d" kindref="member">sw_ver</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="326" refid="uniondmcam__param__val__u_1a3fc6cbedf17de6ff2fdb362d0c03f39e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="uniondmcam__param__val__u_1a3fc6cbedf17de6ff2fdb362d0c03f39e" kindref="member">sw2_ver</ref>;<sp/></highlight></codeline>
<codeline lineno="327" refid="uniondmcam__param__val__u_1a917596045bb374947fd7d5f9451df7ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="uniondmcam__param__val__u_1a917596045bb374947fd7d5f9451df7ff" kindref="member">hw2_ver</ref>;<sp/></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>info_version;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="330" refid="uniondmcam__param__val__u_1a2db788005d0705f1334c0818af318fa2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="uniondmcam__param__val__u_1a2db788005d0705f1334c0818af318fa2" kindref="member">format</ref>;<sp/></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>frame_format;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="333" refid="uniondmcam__param__val__u_1a51e718fcd8c98d7a314298d27ff9e525" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="uniondmcam__param__val__u_1a51e718fcd8c98d7a314298d27ff9e525" kindref="member">fps</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>frame_rate;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>random_delay_en;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>delay;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>}sync_delay;</highlight></codeline>
<codeline lineno="339" refid="uniondmcam__param__val__u_1a5756fe3d8204d1719f018e057823d73d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdmcam__param__roi__t" kindref="compound">itof_param_roi_t</ref><sp/><ref refid="uniondmcam__param__val__u_1a5756fe3d8204d1719f018e057823d73d" kindref="member">roi</ref>;<sp/></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="341" refid="uniondmcam__param__val__u_1a41ba008501865490186d479002e0f2f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="uniondmcam__param__val__u_1a41ba008501865490186d479002e0f2f2" kindref="member">percent</ref>;<sp/></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>illum_power;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="344" refid="uniondmcam__param__val__u_1adc829630c04fb86b1717f589ba748ca8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="uniondmcam__param__val__u_1adc829630c04fb86b1717f589ba748ca8" kindref="member">intg_us</ref>;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>intg;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="347" refid="uniondmcam__param__val__u_1a4b8cd4386421cc3a87177475f4034895" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="uniondmcam__param__val__u_1a4b8cd4386421cc3a87177475f4034895" kindref="member">intg_3dhdr</ref>;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>}intg_hdr;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>corr1;<sp/></highlight><highlight class="comment">//range:[0,4095]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>corr2;<sp/></highlight><highlight class="comment">//range:[0,4095]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>}phase_corr;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>tl_cal;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>tr_cal;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>bl_cal;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>br_cal;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>ib_cal;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>}temp;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="361" refid="uniondmcam__param__val__u_1ab9bea640c402b891a82a42b1121ea3b7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="uniondmcam__param__val__u_1ab9bea640c402b891a82a42b1121ea3b7" kindref="member">valid</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="362" refid="uniondmcam__param__val__u_1a1ed450c88742396d519272a54732f19e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="uniondmcam__param__val__u_1a1ed450c88742396d519272a54732f19e" kindref="member">flag</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="363" refid="uniondmcam__param__val__u_1a0aa906ddf37d1e57d38128ee096f75ae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="uniondmcam__param__val__u_1a0aa906ddf37d1e57d38128ee096f75ae" kindref="member">ID</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="364" refid="uniondmcam__param__val__u_1a49047fdb787dfd35eea9cda3c3cb9d54" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="uniondmcam__param__val__u_1a49047fdb787dfd35eea9cda3c3cb9d54" kindref="member">timestamp</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="365" refid="uniondmcam__param__val__u_1a9ebbe6f86029e3576a95886b19ffd264" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="uniondmcam__param__val__u_1a9ebbe6f86029e3576a95886b19ffd264" kindref="member">fsize</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="366" refid="uniondmcam__param__val__u_1acc2cfce91806e407a7ed14c578a7a089" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="uniondmcam__param__val__u_1acc2cfce91806e407a7ed14c578a7a089" kindref="member">datasize</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>}cinfo;<sp/></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="369" refid="uniondmcam__param__val__u_1ac65cc1e6d7391e45f44e0100200edccf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="uniondmcam__param__val__u_1ac65cc1e6d7391e45f44e0100200edccf" kindref="member">part_ver</ref>;<sp/></highlight></codeline>
<codeline lineno="370" refid="uniondmcam__param__val__u_1acbb18884a7b73feec3cb100a6b8030fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="uniondmcam__param__val__u_1acbb18884a7b73feec3cb100a6b8030fa" kindref="member">chip_id</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="371" refid="uniondmcam__param__val__u_1ab0854c7be19806a3ee4bd82c9d34e43c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="uniondmcam__param__val__u_1ab0854c7be19806a3ee4bd82c9d34e43c" kindref="member">wafer_id</ref>;<sp/></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>}chip_info;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>mod_freq;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="375" refid="uniondmcam__param__val__u_1aef69f1e3c7557818739341188bc72dc8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="uniondmcam__param__val__u_1aef69f1e3c7557818739341188bc72dc8" kindref="member">offset</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="376" refid="uniondmcam__param__val__u_1a9e1219d240e2a2c2ba2ead22e71cccc3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="uniondmcam__param__val__u_1a9e1219d240e2a2c2ba2ead22e71cccc3" kindref="member">coeff</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="377" refid="uniondmcam__param__val__u_1a162518b58debead460b3ca009f357bf2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="uniondmcam__param__val__u_1a162518b58debead460b3ca009f357bf2" kindref="member">random_freq</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>valid;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="379" refid="uniondmcam__param__val__u_1a04853aa79cbde1e293907c96c031573e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="uniondmcam__param__val__u_1a04853aa79cbde1e293907c96c031573e" kindref="member">frm_format</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>}sys_calib_coeff;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>sec;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>us;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>}sync_time;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="386" refid="uniondmcam__param__val__u_1a32e502da43a57471af8789254b3fbe47" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="uniondmcam__param__val__u_1a32e502da43a57471af8789254b3fbe47" kindref="member">mod_freq0</ref>;<sp/></highlight></codeline>
<codeline lineno="387" refid="uniondmcam__param__val__u_1a2bfdbc94de0388ad6f71ed297495c814" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="uniondmcam__param__val__u_1a2bfdbc94de0388ad6f71ed297495c814" kindref="member">mod_freq1</ref>;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>}dual_freq;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="390" refid="uniondmcam__param__val__u_1acbc2c5c4152dcfc10d5c87829be52fe1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="uniondmcam__param__val__u_1acbc2c5c4152dcfc10d5c87829be52fe1" kindref="member">cx</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="391" refid="uniondmcam__param__val__u_1a0bc2dadaf91d6098fe81b1deb57a8d99" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="uniondmcam__param__val__u_1a0bc2dadaf91d6098fe81b1deb57a8d99" kindref="member">cy</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="392" refid="uniondmcam__param__val__u_1ac25a454219ff7fc7ff28a86b7edc5c29" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="uniondmcam__param__val__u_1ac25a454219ff7fc7ff28a86b7edc5c29" kindref="member">fx</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="393" refid="uniondmcam__param__val__u_1ae55c9e0787b7c0a9f84866b4ee08c03c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="uniondmcam__param__val__u_1ae55c9e0787b7c0a9f84866b4ee08c03c" kindref="member">fy</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>}lens_param;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="396" refid="uniondmcam__param__val__u_1af5faf26ef9b7cf48754cb443fdf42112" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="uniondmcam__param__val__u_1af5faf26ef9b7cf48754cb443fdf42112" kindref="member">total_cnt</ref>;<sp/></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>remain_cnt;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>freq[4];</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>}calib_freq;</highlight></codeline>
<codeline lineno="400"><highlight class="normal">}<ref refid="uniondmcam__param__val__u" kindref="compound">itof_param_val_u</ref>;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(pop)</highlight></codeline>
<codeline lineno="402"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="404" refid="structdmcam__param__item__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="405" refid="structdmcam__param__item__t_1a868d9f8251d594fd065a6224e6b989aa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a79aff7664786fca93ace67a7f53cfa25" kindref="member">itof_dev_param_e</ref><sp/><ref refid="structdmcam__param__item__t_1a868d9f8251d594fd065a6224e6b989aa" kindref="member">param_id</ref>;</highlight></codeline>
<codeline lineno="406" refid="structdmcam__param__item__t_1a7395b6bfb29f304d7675f8f66d306528" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structdmcam__param__item__t_1a7395b6bfb29f304d7675f8f66d306528" kindref="member">param_val_len</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="407" refid="structdmcam__param__item__t_1a3d2dc3b921e7691e84d4d5792663a80d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="uniondmcam__param__val__u" kindref="compound">itof_param_val_u</ref><sp/><ref refid="structdmcam__param__item__t_1a3d2dc3b921e7691e84d4d5792663a80d" kindref="member">param_val</ref>;</highlight></codeline>
<codeline lineno="408"><highlight class="normal">}<sp/><ref refid="structdmcam__param__item__t" kindref="compound">itof_param_item_t</ref>;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="411" refid="dmcam_8h_1a4d0042f323361e9a187bb1ff827cdf0a" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="412" refid="dmcam_8h_1a4d0042f323361e9a187bb1ff827cdf0aa7ad67d3dda4e333f61875d8cefba4a4a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a4d0042f323361e9a187bb1ff827cdf0aa7ad67d3dda4e333f61875d8cefba4a4a" kindref="member">IT_FRAME_FMT_RAW_DIST</ref><sp/>=<sp/>0,<sp/></highlight></codeline>
<codeline lineno="413" refid="dmcam_8h_1a4d0042f323361e9a187bb1ff827cdf0aae4afa6254f90c44cbeed99a1668f75f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a4d0042f323361e9a187bb1ff827cdf0aae4afa6254f90c44cbeed99a1668f75f4" kindref="member">IT_FRAME_FMT_DISTANCE</ref>,<sp/></highlight></codeline>
<codeline lineno="414" refid="dmcam_8h_1a4d0042f323361e9a187bb1ff827cdf0aa7334fab02874d8f78f90aa49a723ac3e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a4d0042f323361e9a187bb1ff827cdf0aa7334fab02874d8f78f90aa49a723ac3e" kindref="member">IT_FRAME_FMT_GRAY</ref>,</highlight></codeline>
<codeline lineno="415" refid="dmcam_8h_1a4d0042f323361e9a187bb1ff827cdf0aa5b9e78b699891c38170dc4e54724d934" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a4d0042f323361e9a187bb1ff827cdf0aa5b9e78b699891c38170dc4e54724d934" kindref="member">IT_FRAME_FMT_PCLOUD</ref>,</highlight></codeline>
<codeline lineno="416" refid="dmcam_8h_1a4d0042f323361e9a187bb1ff827cdf0aaa6983e77e40590683a2e395a135f1b0c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a4d0042f323361e9a187bb1ff827cdf0aaa6983e77e40590683a2e395a135f1b0c" kindref="member">IT_FRAME_FMT_RGB</ref>,<sp/></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>---<sp/>TBD<sp/>----*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal">}<ref refid="dmcam_8h_1a4d0042f323361e9a187bb1ff827cdf0a" kindref="member">itof_frame_fmt_e</ref>;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="421" refid="structdmcam__frame__info__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="422" refid="structdmcam__frame__info__t_1a7b557ad0e20b408a7055f2b9e2cd9243" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structdmcam__frame__info__t_1a7b557ad0e20b408a7055f2b9e2cd9243" kindref="member">frame_size</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="423" refid="structdmcam__frame__info__t_1a418d7a290e76100103fc1afb8f1c3f29" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structdmcam__frame__info__t_1a418d7a290e76100103fc1afb8f1c3f29" kindref="member">frame_format</ref>;<sp/></highlight></codeline>
<codeline lineno="424" refid="structdmcam__frame__info__t_1a711f5747b27d5a210f136e4833351f60" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structdmcam__frame__info__t_1a711f5747b27d5a210f136e4833351f60" kindref="member">frame_idx</ref>;<sp/></highlight></codeline>
<codeline lineno="426" refid="structdmcam__frame__info__t_1afb40c6ea6edc294009647b341b9fa809" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structdmcam__frame__info__t_1afb40c6ea6edc294009647b341b9fa809" kindref="member">width</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="427" refid="structdmcam__frame__info__t_1ad182f7a7948a696c0aa377867fc3f1fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structdmcam__frame__info__t_1ad182f7a7948a696c0aa377867fc3f1fd" kindref="member">height</ref>;<sp/></highlight></codeline>
<codeline lineno="428" refid="structdmcam__frame__info__t_1aed69a9e4d050f2337fe7bd8d0aa9b11b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structdmcam__frame__info__t_1aed69a9e4d050f2337fe7bd8d0aa9b11b" kindref="member">depth</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="429" refid="structdmcam__frame__info__t_1a6a94002fa2a434ee1f55f9b482896a8f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structdmcam__frame__info__t_1a6a94002fa2a434ee1f55f9b482896a8f" kindref="member">pixel_format</ref>;</highlight></codeline>
<codeline lineno="430" refid="structdmcam__frame__info__t_1a33b28be1e6c67cd4f7e2e121b37511b6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structdmcam__frame__info__t_1a33b28be1e6c67cd4f7e2e121b37511b6" kindref="member">priv_code</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="432" refid="structdmcam__frame__info__t_1a1d3d45e38407a28f4abc90f8073986b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>temp0,<sp/><ref refid="structdmcam__frame__info__t_1a1d3d45e38407a28f4abc90f8073986b4" kindref="member">temp1</ref>;</highlight></codeline>
<codeline lineno="433" refid="structdmcam__frame__info__t_1a81f4ec0b274e7dc79162ab8f3742bd48" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structdmcam__frame__info__t_1a81f4ec0b274e7dc79162ab8f3742bd48" kindref="member">rx_ts</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="434" refid="structdmcam__frame__info__t_1ad112c6e6522520885cb1eec4a7105034" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structdmcam__frame__info__t_1ad112c6e6522520885cb1eec4a7105034" kindref="member">rx_us</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="435"><highlight class="normal">}<ref refid="structdmcam__frame__info__t" kindref="compound">itof_frame_info_t</ref>;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="438" refid="structdmcam__frame__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="439" refid="structdmcam__frame__t_1ac0d1f4e4896e6fe15ba66be93d05f3b7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdmcam__frame__info__t" kindref="compound">itof_frame_info_t</ref><sp/><ref refid="structdmcam__frame__t_1ac0d1f4e4896e6fe15ba66be93d05f3b7" kindref="member">frame_info</ref>;</highlight></codeline>
<codeline lineno="440" refid="structdmcam__frame__t_1a387afc351776603e37621af1102a4f56" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structdmcam__frame__t_1a387afc351776603e37621af1102a4f56" kindref="member">frame_data</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="441"><highlight class="normal">}<ref refid="structdmcam__frame__t" kindref="compound">itof_frame_t</ref>;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="444" refid="dmcam_8h_1a7849459a06fce3a8ebcb2ed1f3973eac" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="dmcam_8h_1a7849459a06fce3a8ebcb2ed1f3973eac" kindref="member">itof_cap_frdy_f</ref>)(<ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref><sp/>*dev,<sp/><ref refid="structdmcam__frame__t" kindref="compound">itof_frame_t</ref><sp/>*frame);</highlight></codeline>
<codeline lineno="446" refid="dmcam_8h_1aa8a592c9c0553d896e52900ffdc99eeb" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>bool<sp/>(*<ref refid="dmcam_8h_1aa8a592c9c0553d896e52900ffdc99eeb" kindref="member">itof_cap_err_f</ref>)(<ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref><sp/>*dev,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*err_args);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="449" refid="structdmcam__cap__cfg__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="450" refid="structdmcam__cap__cfg__t_1a2c210a2e12c6ad6ae5448045babfc286" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structdmcam__cap__cfg__t_1a2c210a2e12c6ad6ae5448045babfc286" kindref="member">cache_frames_cnt</ref>;<sp/></highlight></codeline>
<codeline lineno="451" refid="structdmcam__cap__cfg__t_1add078b05b9ba384278972040e909383e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a7849459a06fce3a8ebcb2ed1f3973eac" kindref="member">itof_cap_frdy_f</ref><sp/><ref refid="structdmcam__cap__cfg__t_1add078b05b9ba384278972040e909383e" kindref="member">on_frame_ready</ref>;<sp/></highlight></codeline>
<codeline lineno="452" refid="structdmcam__cap__cfg__t_1a1fa2ebb10b2f3657e4664254e5b08ea9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1aa8a592c9c0553d896e52900ffdc99eeb" kindref="member">itof_cap_err_f</ref><sp/><ref refid="structdmcam__cap__cfg__t_1a1fa2ebb10b2f3657e4664254e5b08ea9" kindref="member">on_error</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="454" refid="structdmcam__cap__cfg__t_1a78245a2fea5239164c55365cbefc8916" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structdmcam__cap__cfg__t_1a78245a2fea5239164c55365cbefc8916" kindref="member">en_save_manually</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="456" refid="structdmcam__cap__cfg__t_1a222218bb0e5e26697fac0bf45eeaa891" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structdmcam__cap__cfg__t_1a222218bb0e5e26697fac0bf45eeaa891" kindref="member">en_save_replay</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="457" refid="structdmcam__cap__cfg__t_1a1c93f374123fbb6de0415a3989811cde" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structdmcam__cap__cfg__t_1a1c93f374123fbb6de0415a3989811cde" kindref="member">en_save_dist_u16</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="458" refid="structdmcam__cap__cfg__t_1a81efed8148ae8c20318e57a2b7f7aaf5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structdmcam__cap__cfg__t_1a81efed8148ae8c20318e57a2b7f7aaf5" kindref="member">en_save_gray_u16</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="460" refid="structdmcam__cap__cfg__t_1a6b1bfdc261c77049a63c884684b9ae44" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structdmcam__cap__cfg__t_1a6b1bfdc261c77049a63c884684b9ae44" kindref="member">fname_replay</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="462" refid="structdmcam__cap__cfg__t_1ad638934199d5bae7e2523196a461638c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structdmcam__cap__cfg__t_1ad638934199d5bae7e2523196a461638c" kindref="member">en_fdev_rewind</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="463"><highlight class="normal">}<ref refid="structdmcam__cap__cfg__t" kindref="compound">itof_cap_cfg_t</ref>;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*</highlight></codeline>
<codeline lineno="466"><highlight class="comment"><sp/>*<sp/>lib<sp/>init/uninit/cfg<sp/>API<sp/>section<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="467"><highlight class="comment"><sp/>*---------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dmcam_8h_1a684254b9b411831a876fb5d2c3acdb3f" kindref="member">itof_init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*log_fname);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dmcam_8h_1a8e2d89f44424a284a00d5189fdb78812" kindref="member">itof_uninit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dmcam_8h_1ac05e4d01759cbead7b662595350b7d12" kindref="member">itof_log_cfg</ref>(<ref refid="dmcam_8h_1aec561b7d4a2678a8002879106a04fa17" kindref="member">itof_log_level_e</ref><sp/>console_level,<sp/><ref refid="dmcam_8h_1aec561b7d4a2678a8002879106a04fa17" kindref="member">itof_log_level_e</ref><sp/>file_level,<sp/><ref refid="dmcam_8h_1aec561b7d4a2678a8002879106a04fa17" kindref="member">itof_log_level_e</ref><sp/>usb_level);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dmcam_8h_1a9ac318a393cb90d50572e5e6ca0e0fbe" kindref="member">itof_path_cfg</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="dmcam_8h_1a38b41f66b430a48cbc969e4f80a9b406" kindref="member">itof_path_get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="dmcam_8h_1ad39a197d99faf734e91cfdad1a2f7f3f" kindref="member">itof_error_name</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>error_code);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*</highlight></codeline>
<codeline lineno="533"><highlight class="comment"><sp/>*<sp/>device<sp/>enumberation/open/close<sp/>API<sp/>section<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="534"><highlight class="comment"><sp/>*---------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dmcam_8h_1ae27b74edb35b9020e4d75002fecaf949" kindref="member">itof_dev_list</ref>(<ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref><sp/>*dev_list,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dev_list_num);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref>*<sp/><ref refid="dmcam_8h_1abcd7bfd3b53d62aabd4b34a4f93eb63b" kindref="member">itof_dev_open</ref>(<ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref><sp/>*dev);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref>*<sp/><ref refid="dmcam_8h_1af927227c3fc1da50c54a1c63f4566ee2" kindref="member">itof_dev_open_by_fd</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref>*<sp/><ref refid="dmcam_8h_1ae5da36231f829fcd19fae8cb55bbeef7" kindref="member">itof_dev_open_by_uri</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uri_str);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dmcam_8h_1ad395f0de3c2c6ac11251fad93f379fac" kindref="member">itof_dev_close</ref>(<ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref><sp/>*dev);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="dmcam_8h_1a9899ace6d1c2a2da066ccd8b7489b714" kindref="member">itof_dev_get_uri</ref>(<ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref><sp/>*dev,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uri_str,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>uri_str_len);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dmcam_8h_1a64278cba893dea9626a90ab992e14d1c" kindref="member">itof_dev_reset</ref>(<ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref><sp/>*dev,<sp/>itof_dev_rst_e<sp/>target);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*</highlight></codeline>
<codeline lineno="618"><highlight class="comment"><sp/>*<sp/>register/parameters<sp/>RW<sp/>API<sp/>section<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="619"><highlight class="comment"><sp/>*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dmcam_8h_1a223ff6ed701bafde24d25ac0ac3835e7" kindref="member">itof_reg_batch_write</ref>(<ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref><sp/>*dev,<sp/>itof_dev_reg_e<sp/>target,<sp/>uint32_t<sp/>reg_base,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>*reg_vals,<sp/>uint16_t<sp/>reg_vals_len);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dmcam_8h_1aa1c0fb8eb8dacf5e9bed4574c6239215" kindref="member">itof_reg_batch_read</ref>(<ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref><sp/>*dev,<sp/>itof_dev_reg_e<sp/>target,<sp/>uint32_t<sp/>reg_base,<sp/>uint32_t<sp/>*reg_vals,<sp/>uint16_t<sp/>reg_vals_len);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dmcam_8h_1a7842cd6a2aee7c691e213a9486620594" kindref="member">itof_param_batch_set</ref>(<ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref><sp/>*dev,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdmcam__param__item__t" kindref="compound">itof_param_item_t</ref><sp/>*param_items,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>item_cnt);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dmcam_8h_1ad661056e429d3ec09a81f723c2b3bd2c" kindref="member">itof_param_batch_get</ref>(<ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref><sp/>*dev,<sp/><ref refid="structdmcam__param__item__t" kindref="compound">itof_param_item_t</ref><sp/>*param_items,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>item_cnt);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*</highlight></codeline>
<codeline lineno="691"><highlight class="comment"><sp/>*<sp/>capture<sp/>API<sp/>section<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="692"><highlight class="comment"><sp/>*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dmcam_8h_1ad8d2f9ef09c4337b76124e8ec6d6c0c2" kindref="member">itof_cap_config_set</ref>(<ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref><sp/>*dev,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdmcam__cap__cfg__t" kindref="compound">itof_cap_cfg_t</ref><sp/>*cfg);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dmcam_8h_1a52e0b214b3b1ccd54dd8084b7952e3cd" kindref="member">itof_cap_config_get</ref>(<ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref><sp/>*dev,<sp/><ref refid="structdmcam__cap__cfg__t" kindref="compound">itof_cap_cfg_t</ref><sp/>*cfg);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dmcam_8h_1adf485506fef795de5084578e24f69468" kindref="member">itof_cap_set_callback_on_frame_ready</ref>(<ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref><sp/>*dev,<sp/><ref refid="dmcam_8h_1a7849459a06fce3a8ebcb2ed1f3973eac" kindref="member">itof_cap_frdy_f</ref><sp/>cb);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dmcam_8h_1ac318140ffd39ba4f227a550739b103f5" kindref="member">itof_cap_set_callback_on_error</ref>(<ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref><sp/>*dev,<sp/><ref refid="dmcam_8h_1aa8a592c9c0553d896e52900ffdc99eeb" kindref="member">itof_cap_err_f</ref><sp/>cb);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dmcam_8h_1a6dae2856d85b8c9c0a5d422e74bbfd9e" kindref="member">itof_cap_snapshot</ref>(<ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref><sp/>*dev,<sp/>uint8_t<sp/>*frame_data,<sp/>uint32_t<sp/>frame_dlen,<sp/><ref refid="structdmcam__frame__t" kindref="compound">itof_frame_t</ref><sp/>*frame);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dmcam_8h_1aff920045679fbf522c89bfb9e57e67d6" kindref="member">itof_cap_is_ongoing</ref>(<ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref><sp/>*dev);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dmcam_8h_1a9cf5df46c457249084919038ac0d7d8f" kindref="member">itof_cap_start</ref>(<ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref><sp/>*dev);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dmcam_8h_1a77745ba3b0b299e7b25541f938410cf9" kindref="member">itof_cap_stop</ref>(<ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref><sp/>*dev);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dmcam_8h_1ace83386899d334d63bd44e9f53bff181" kindref="member">itof_cap_get_frames</ref>(<ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref><sp/>*dev,<sp/>uint32_t<sp/>frame_num,<sp/>uint8_t<sp/>*frame_data,<sp/>uint32_t<sp/>frame_dlen,<sp/><ref refid="structdmcam__frame__t" kindref="compound">itof_frame_t</ref><sp/>*first_frame_info);</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dmcam_8h_1a3a9007d1414099ae67fb8e976abdeabe" kindref="member">itof_cap_get_frame</ref>(<ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref><sp/>*dev,<sp/>uint8_t<sp/>*frame_data,<sp/>uint32_t<sp/>frame_dlen,<sp/><ref refid="structdmcam__frame__t" kindref="compound">itof_frame_t</ref><sp/>*frame_info);</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dmcam_8h_1aa30cef39b8590d45757c51c35cc0c823" kindref="member">itof_cap_save_frame</ref>(<ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref><sp/>*dev,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*frame_data,<sp/>uint32_t<sp/>frame_dlen,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdmcam__frame__info__t" kindref="compound">itof_frame_info_t</ref><sp/>*frame_info);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight><highlight class="comment">//<sp/>int<sp/>itof_cap_save_dist_u16(itof_dev_t<sp/>*<sp/>dev,<sp/>const<sp/>uint8_t<sp/>*src,<sp/>int<sp/>src_len,<sp/>const<sp/>itof_frame_info_t<sp/>*frame_info);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight><highlight class="comment">//<sp/>int<sp/>itof_cap_save_gray_u16(itof_dev_t<sp/>*<sp/>dev,<sp/>const<sp/>uint8_t<sp/>*src,<sp/>int<sp/>src_len,<sp/>const<sp/>itof_frame_info_t<sp/>*frame_info);</highlight></codeline>
<codeline lineno="849"><highlight class="comment"></highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dmcam_8h_1ab2d04b430386b192a00be56caadc2007" kindref="member">itof_cap_seek_frame</ref>(<ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref><sp/>*dev,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_cnt_offset,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>whence);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dmcam_8h_1a51f5965814b35fa4f3070b640162f511" kindref="member">itof_firmware_upgrade</ref>(<ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref><sp/>*dev,<sp/>uint8_t<sp/>type,<sp/>uint16_t<sp/>version,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file_name);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>itof_data_download(<ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref><sp/>*dev,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/>uint8_t<sp/>type,<sp/>uint16_t<sp/>version,<sp/>uint32_t<sp/>addr);</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>itof_data_upload(<ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref><sp/>*dev,<sp/>uint8_t<sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file_name);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*</highlight></codeline>
<codeline lineno="867"><highlight class="comment"><sp/>*<sp/>frame<sp/>data<sp/>get<sp/>API<sp/>section<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="868"><highlight class="comment"><sp/>*---------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dmcam_8h_1a254938f5c548e56c6fab6c043fca0ede" kindref="member">itof_frame_get_distance</ref>(<ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref><sp/>*dev,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*dst,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst_len,</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_len,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdmcam__frame__info__t" kindref="compound">itof_frame_info_t</ref><sp/>*finfo);</highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dmcam_8h_1a69df5018e1eab3ee46a409bf8bf992c5" kindref="member">itof_frame_get_dist_raw</ref>(<ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref><sp/>*dev,<sp/>uint16_t<sp/>*dst,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst_len,</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_len,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdmcam__frame__info__t" kindref="compound">itof_frame_info_t</ref><sp/>*finfo);</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dmcam_8h_1a400ff437a3fdab7dd4261c295957c521" kindref="member">itof_frame_get_dist_f32</ref>(<ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref><sp/>*dev,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*dst,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst_len,</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_len,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdmcam__frame__info__t" kindref="compound">itof_frame_info_t</ref><sp/>*finfo);</highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dmcam_8h_1a5904f93833a6b1fa6e159e8d6546a5d7" kindref="member">itof_frame_get_dist_u16</ref>(<ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref><sp/>*dev,<sp/>uint16_t<sp/>*dst,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst_len,</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_len,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdmcam__frame__info__t" kindref="compound">itof_frame_info_t</ref><sp/>*finfo);</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dmcam_8h_1aa20fc909c478be490fff511be768039f" kindref="member">itof_frame_get_gray</ref>(<ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref><sp/>*dev,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*dst,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst_len,</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_len,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdmcam__frame__info__t" kindref="compound">itof_frame_info_t</ref><sp/>*finfo);</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dmcam_8h_1a9025d5a4071ef00798b478099dc77ff3" kindref="member">itof_frame_get_gray_f32</ref>(<ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref><sp/>*dev,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*dst,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst_len,</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_len,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdmcam__frame__info__t" kindref="compound">itof_frame_info_t</ref><sp/>*finfo);</highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dmcam_8h_1ad5c459379fcc872c6685dd8873b9ed2b" kindref="member">itof_frame_get_gray_u16</ref>(<ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref><sp/>*dev,<sp/>uint16_t<sp/>*dst,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst_len,</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_len,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdmcam__frame__info__t" kindref="compound">itof_frame_info_t</ref><sp/>*finfo);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dmcam_8h_1a0c938a718352b7b791b2826d4aaa8692" kindref="member">itof_frame_get_pcl</ref>(<ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref><sp/>*dev,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*pcl,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pcl_len,</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*dist,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dist_len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>img_w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>img_h,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdmcam__camera__para__t" kindref="compound">dmcam_camera_para_t</ref><sp/>*p_cam_param);</highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dmcam_8h_1a7a716664d7e88db1e4c7ab49d0bd098d" kindref="member">itof_frame_get_pcl_xyzd</ref>(<ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref><sp/>*dev,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*pcl,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pcl_len,</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*dist,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dist_len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>img_w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>img_h,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pseudo_color,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdmcam__camera__para__t" kindref="compound">dmcam_camera_para_t</ref><sp/>*p_cam_param);</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dmcam_8h_1ae483c9b218260c2849fdbddf397236f7" kindref="member">itof_frame_get_pcl_xyzi</ref>(<ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref><sp/>*dev,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*pcl,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pcl_len,</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*dist,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dist_len,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*gray,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gray_len,</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>img_w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>img_h,<sp/>int16_t<sp/>ir_balance,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdmcam__camera__para__t" kindref="compound">dmcam_camera_para_t</ref><sp/>*p_cam_param);</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*</highlight></codeline>
<codeline lineno="1059"><highlight class="comment"><sp/>*<sp/>filter<sp/>API<sp/>section<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1060"><highlight class="comment"><sp/>*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1063" refid="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fb" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1064" refid="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fbad5374922c1c7929f504e16048bd54af6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fbad5374922c1c7929f504e16048bd54af6" kindref="member">ITOF_FILTER_ID_LEN_CALIB</ref>,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1065" refid="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fba82452a4cc25432fd8f87e8003e3b8c78" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fba82452a4cc25432fd8f87e8003e3b8c78" kindref="member">ITOF_FILTER_ID_PIXEL_CALIB</ref>,<sp/><sp/></highlight></codeline>
<codeline lineno="1066" refid="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fba130c93d0919d89b9b9977cfc31f760f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fba130c93d0919d89b9b9977cfc31f760f7" kindref="member">ITOF_FILTER_ID_DEPTH_FILTER</ref>,<sp/><sp/></highlight></codeline>
<codeline lineno="1067" refid="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fba88b63c99a08d9fff81fbde67d014ec99" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fba88b63c99a08d9fff81fbde67d014ec99" kindref="member">ITOF_FILTER_ID_RESERVED</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1068" refid="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fbab10d5c87df0820cfdf3c92aae0da582f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fbab10d5c87df0820cfdf3c92aae0da582f" kindref="member">ITOF_FILTER_ID_AMP</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1069" refid="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fba54e9a9433ad6187c3e175bdb340d5832" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fba54e9a9433ad6187c3e175bdb340d5832" kindref="member">ITOF_FILTER_ID_AUTO_INTG</ref>,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1070" refid="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fbaf58599b5087bdd95b7135e6efceec1f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fbaf58599b5087bdd95b7135e6efceec1f8" kindref="member">ITOF_FILTER_ID_SYNC_DELAY</ref>,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1071" refid="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fbab06fa287b6cabf9e96e41fed3518e29d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fbab06fa287b6cabf9e96e41fed3518e29d" kindref="member">ITOF_FILTER_ID_TEMP_MONITOR</ref>,<sp/></highlight></codeline>
<codeline lineno="1072" refid="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fba9619340bf83bcc5207a8d7ff63ab9f9c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fba9619340bf83bcc5207a8d7ff63ab9f9c" kindref="member">ITOF_FILTER_ID_HDR</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1073" refid="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fba225ba19c884c049f13574597289b613a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fba225ba19c884c049f13574597289b613a" kindref="member">ITOF_FILTER_ID_OFFSET</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1074" refid="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fba6f3845dee52dc985d3f45f71424a7932" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fba6f3845dee52dc985d3f45f71424a7932" kindref="member">ITOF_FILTER_ID_SPORT_MODE</ref>,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1075" refid="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fba70f44611100dcdf29ecb33c542f4e473" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fba70f44611100dcdf29ecb33c542f4e473" kindref="member">ITOF_FILTER_ID_SYS_CALIB</ref>,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1076" refid="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fbaeaa40879a14eec486e9c24f20c2f025c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fbaeaa40879a14eec486e9c24f20c2f025c" kindref="member">ITOF_FILTER_ID_AMBIENT_LIGHT_CALIB</ref>,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1077" refid="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fbabe322bbe4858095c020a3ae3921d25f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fbabe322bbe4858095c020a3ae3921d25f1" kindref="member">ITOF_FILTER_ID_FLYNOISE</ref>,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_FILTER_ID_TEMP_CALIB,</highlight><highlight class="comment">/*Temperature<sp/>calibration*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1080" refid="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fba9d8766d8b1c0898d67f2b463c1bce482" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fba9d8766d8b1c0898d67f2b463c1bce482" kindref="member">ITOF_FILTER_ID_MEDIAN</ref><sp/>=<sp/><ref refid="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fba130c93d0919d89b9b9977cfc31f760f7" kindref="member">ITOF_FILTER_ID_DEPTH_FILTER</ref>,<sp/><sp/></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_FILTER_CNT,</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal">}<ref refid="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fb" kindref="member">itof_filter_id_e</ref>;</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight></codeline>
<codeline lineno="1086" refid="uniondmcam__filter__args__u" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>raw;</highlight></codeline>
<codeline lineno="1088" refid="uniondmcam__filter__args__u_1a22c0066afe25327e84a6befb61ffbd7b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="uniondmcam__filter__args__u_1a22c0066afe25327e84a6befb61ffbd7b" kindref="member">case_idx</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1089" refid="uniondmcam__filter__args__u_1a184d1b6a3e7b3109e5ff85cd71ffdaf7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="uniondmcam__filter__args__u_1a184d1b6a3e7b3109e5ff85cd71ffdaf7" kindref="member">lens_id</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1090" refid="uniondmcam__filter__args__u_1a682d6eb9a5750e89977ee126555c92f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="uniondmcam__filter__args__u_1a682d6eb9a5750e89977ee126555c92f9" kindref="member">min_amp</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1091" refid="uniondmcam__filter__args__u_1a0126a90774545dd6ad47c4b2687553e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="uniondmcam__filter__args__u_1a0126a90774545dd6ad47c4b2687553e9" kindref="member">sat_ratio</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1092" refid="uniondmcam__filter__args__u_1a925d145a6eb431b5aaac0e81db568268" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="uniondmcam__filter__args__u_1a925d145a6eb431b5aaac0e81db568268" kindref="member">sync_delay</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1093" refid="uniondmcam__filter__args__u_1adf5e6948721fe5579d388dd6001eb97f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/><ref refid="uniondmcam__filter__args__u_1adf5e6948721fe5579d388dd6001eb97f" kindref="member">temp_threshold</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1095" refid="uniondmcam__filter__args__u_1a49a503990e4290359007bf39119bc8f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="uniondmcam__filter__args__u_1a49a503990e4290359007bf39119bc8f1" kindref="member">intg_3d</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1096" refid="uniondmcam__filter__args__u_1adafb76cc8f44326824492fad4a7df54c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="uniondmcam__filter__args__u_1adafb76cc8f44326824492fad4a7df54c" kindref="member">intg_3dhdr</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/>}intg;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1098" refid="uniondmcam__filter__args__u_1ac7dcd5e191772053a96dafb1f5613b22" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="uniondmcam__filter__args__u_1ac7dcd5e191772053a96dafb1f5613b22" kindref="member">median_ksize</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1099" refid="uniondmcam__filter__args__u_1abfe369df4afe55b17106079c9a2bbe1b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="uniondmcam__filter__args__u_1abfe369df4afe55b17106079c9a2bbe1b" kindref="member">offset_mm</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1100" refid="uniondmcam__filter__args__u_1a3ceba90f8948d00b6e7623352f70317f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="uniondmcam__filter__args__u_1a3ceba90f8948d00b6e7623352f70317f" kindref="member">sport_mode</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1101" refid="uniondmcam__filter__args__u_1a74aa563c60985e8bd62fc93e4826f53f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="uniondmcam__filter__args__u_1a74aa563c60985e8bd62fc93e4826f53f" kindref="member">k_ambient_light</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1103" refid="uniondmcam__filter__args__u_1ab7a44424ac8706be1a13d70b1539f6f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="uniondmcam__filter__args__u_1ab7a44424ac8706be1a13d70b1539f6f5" kindref="member">col_reduction</ref>;<sp/></highlight></codeline>
<codeline lineno="1104" refid="uniondmcam__filter__args__u_1a37420a4c5fddfb051f7d1f775c9b047c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="uniondmcam__filter__args__u_1a37420a4c5fddfb051f7d1f775c9b047c" kindref="member">row_reduction</ref>;<sp/></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/>}binning_info;</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1108" refid="uniondmcam__filter__args__u_1aa5202c51e11f2041d3ef71795f8a799e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="uniondmcam__filter__args__u_1aa5202c51e11f2041d3ef71795f8a799e" kindref="member">depth_filter_mode</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1110" refid="uniondmcam__filter__args__u_1a2f1ff2506497f7245631eb630a45f4ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="uniondmcam__filter__args__u_1a2f1ff2506497f7245631eb630a45f4ed" kindref="member">depth_filter_strength</ref>;<sp/></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1114" refid="uniondmcam__filter__args__u_1a71d37da1d00f1829a894198cb7b63dd7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="uniondmcam__filter__args__u_1a71d37da1d00f1829a894198cb7b63dd7" kindref="member">fly_noise_threshold</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1116"><highlight class="normal">}<ref refid="uniondmcam__filter__args__u" kindref="compound">itof_filter_args_u</ref>;</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dmcam_8h_1a5274bfb4e28093c3d58ee361f0f89bce" kindref="member">itof_filter_enable</ref>(<ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref><sp/>*dev,<sp/><sp/><ref refid="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fb" kindref="member">itof_filter_id_e</ref><sp/>filter_id,<sp/><ref refid="uniondmcam__filter__args__u" kindref="compound">itof_filter_args_u</ref><sp/>*filter_arg,<sp/>uint32_t<sp/>reserved);</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dmcam_8h_1add8477d44943b64c016e948a4a1c73f6" kindref="member">itof_filter_disable</ref>(<ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref><sp/>*dev,<sp/><sp/><ref refid="dmcam_8h_1a28c18609c1e9edaaeca6bba2703561fb" kindref="member">itof_filter_id_e</ref><sp/>filter_id);</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*</highlight></codeline>
<codeline lineno="1144"><highlight class="comment"><sp/>*<sp/>CMAP<sp/>utils<sp/>section<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1145"><highlight class="comment"><sp/>*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_EPC<sp/>=<sp/>0,<sp/></highlight><highlight class="comment">//<sp/>EPC<sp/>type<sp/>colormap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_HSV,</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_BWR,</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_JET,</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_GIST_RAINBOW,</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_RAINBOW,</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_SPECTRAL,</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_VIRIDIS,</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_INFERNO,</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_PLASMA,</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_MAGMA,</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_BLUES,</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_BUGN,</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_BUPU,</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_GNBU,</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_GREENS,</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_GREYS,</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_ORANGES,</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_ORRD,</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_PUBU,</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_PUBUGN,</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_PURD,</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_PURPLES,</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_RDPU,</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_REDS,</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_YLGN,</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_YLGNBU,</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_YLORBR,</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_YLORRD,</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_AFMHOT,</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_AUTUMN,</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_BONE,</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_COOL,</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_COPPER,</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_GIST_HEAT,</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_GRAY,</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_HOT,</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_PINK,</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_SPRING,</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_SUMMER,</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_WINTER,</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_BRBG,</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_COOLWARM,</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_PIYG,</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_PRGN,</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_PUOR,</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_RDBU,</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_RDGY,</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_RDYLBU,</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_RDYLGN,</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_SEISMIC,</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_GIST_EARTH,</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_TERRAIN,</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_OCEAN,</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_GIST_STERN,</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_BRG,</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_CMRMAP,</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_CUBEHELIX,</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_GNUPLOT,</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_GNUPLOT2,</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_GIST_NCAR,</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_NIPY_SPECTRAL,</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_FLAG,</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_PRISM,</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//---------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_COUNT,</highlight></codeline>
<codeline lineno="1214"><highlight class="normal">}itof_cmap_palette_e;</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"></highlight></codeline>
<codeline lineno="1217" refid="dmcam_8h_1a7574db3b1665244ce8a46f8839ce49d2" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_OUTFMT_RGB,</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_OUTFMT_RGBA,</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_OUTFMT_BGR,</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//---------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_CMAP_OUTFMT_COUNT,<sp/></highlight></codeline>
<codeline lineno="1223"><highlight class="normal">}<ref refid="dmcam_8h_1a7574db3b1665244ce8a46f8839ce49d2" kindref="member">itof_cmap_outfmt_e</ref>;</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight></codeline>
<codeline lineno="1225" refid="structdmcam__cmap__cfg" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdmcam__cmap__cfg" kindref="compound">itof_cmap_cfg</ref><sp/>{</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/>itof_cmap_palette_e<sp/>color_palette;<sp/></highlight><highlight class="comment">//<sp/>color<sp/>pallete<sp/>index<sp/>used<sp/>during<sp/>convertion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>histeq_en;<sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>=<sp/>enable<sp/>histogram<sp/>equalization<sp/>during<sp/>convertion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal">}<ref refid="structdmcam__cmap__cfg" kindref="compound">itof_cmap_cfg_t</ref>;<sp/></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dmcam_8h_1a5955f132304782e03f9162e0e4e78ab0" kindref="member">itof_cmap_palette_set</ref>(itof_cmap_palette_e<sp/>cm);</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/>itof_cmap_palette_e<sp/><ref refid="dmcam_8h_1a818b2656621893d7c657eb33bc9fd799" kindref="member">itof_cmap_palette_get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"></highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dmcam_8h_1acd8278a4ba7590e78db3f429a2e79ecd" kindref="member">itof_cmap_dist_f32_to_RGB</ref>(uint8_t<sp/>*dst,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst_len,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_len,<sp/></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a7574db3b1665244ce8a46f8839ce49d2" kindref="member">itof_cmap_outfmt_e</ref><sp/>outfmt,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>range_min_m,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>range_max_m,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdmcam__cmap__cfg" kindref="compound">itof_cmap_cfg_t</ref>*<sp/>cfg);</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dmcam_8h_1a7a61e6254ffd4a83abc422f223ab9b2c" kindref="member">itof_cmap_dist_u16_to_RGB</ref>(uint8_t<sp/>*dst,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst_len,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>*src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_len,</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dmcam_8h_1a7574db3b1665244ce8a46f8839ce49d2" kindref="member">itof_cmap_outfmt_e</ref><sp/>outfmt,<sp/>uint16_t<sp/>range_min_mm,<sp/>uint16_t<sp/>range_max_mm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdmcam__cmap__cfg" kindref="compound">itof_cmap_cfg_t</ref><sp/>*cfg);</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dmcam_8h_1a37319aefddbd3c274f4cff9d0955c594" kindref="member">itof_cmap_gray_u16_to_IR</ref>(uint8_t<sp/>*dst,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst_len,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>*src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>balance);</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dmcam_8h_1ae6185f162f89c73dac79d317ea15e2eb" kindref="member">itof_cmap_gray_f32_to_IR</ref>(uint8_t<sp/>*dst,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst_len,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>balance);</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*</highlight></codeline>
<codeline lineno="1311"><highlight class="comment"><sp/>*<sp/>File<sp/>save/load<sp/>API<sp/>section<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1312"><highlight class="comment"><sp/>*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dmcam_8h_1afc31165cb9b0709441990c726198f5b5" kindref="member">itof_file_open</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mode);</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight></codeline>
<codeline lineno="1325"><highlight class="normal"></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dmcam_8h_1a561eb8b4e2257bd6ba378c0cbd0c74ca" kindref="member">itof_file_close</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd);</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_FRAME_SAVE_FLOAT32<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_FRAME_SAVE_UINT32,</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_FRAME_SAVE_UINT16,</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/>ITOF_FRAME_SAVE_UINT8,</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal">}itof_frame_save_fmt_t;</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dmcam_8h_1adb2f0b9ba97da2cb0cef0e3afe58e630" kindref="member">itof_frame_save_raw</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/>itof_frame_save_fmt_t<sp/>save_fmt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>*raw,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>raw_len,</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>img_w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>img_h,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dcs_cnt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*raw_tag);</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dmcam_8h_1a166ad053e6c9c2c3dd15024ee861bb8c" kindref="member">itof_frame_save_distance</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/>itof_frame_save_fmt_t<sp/>save_fmt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*dist,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dist_len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>img_w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>img_h);</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"></highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dmcam_8h_1afab5154e6aaa8f6d436b6e97c80a9e51" kindref="member">itof_frame_save_gray</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/>itof_frame_save_fmt_t<sp/>save_fmt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>img_w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>img_h);</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"></highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dmcam_8h_1a8aff3beeaa724043c1861e8b6f30cede" kindref="member">itof_frame_load_raw</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/>uint16_t<sp/>*dst,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst_len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*dst_w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*dst_h,</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*dst_dcsn,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dst_tag,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst_tag_len);</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"></highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dmcam_8h_1aff19ee2a211c9121508ffaa69355a457" kindref="member">itof_frame_load_distance</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*dst,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst_len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*dst_w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*dst_h);</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"></highlight></codeline>
<codeline lineno="1447"><highlight class="normal"></highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dmcam_8h_1a8f2ad8fa16497bc890e4308d936425d7" kindref="member">itof_frame_load_gray</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*dst,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst_len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*dst_w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*dst_h);</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"></highlight></codeline>
<codeline lineno="1474"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dmcam_8h_1a88cc1dd0bdf01fad346debf786bf4ee0" kindref="member">dmcam_get_lens_param</ref>(<ref refid="structdmcam__dev__t" kindref="compound">itof_dev_t</ref><sp/>*dev,<sp/><ref refid="structdmcam__camera__para__t" kindref="compound">dmcam_camera_para_t</ref><sp/>*param,<sp/>uint8_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="1477"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1479"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/>//ITOF_H</highlight></codeline>
    </programlisting>
    <location file="/mnt/hgfs/sdk/doc/doc-en/source/Reference/C_C++/dmcam.h"/>
  </compounddef>
</doxygen>
